<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/5.0.0/UML platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore">
  <uml:Model xmi:id="_isyugHbKEeaxCYXBkcWWhg" name="PingPong">
    <packagedElement xmi:type="uml:Package" xmi:id="_i1GV8HbKEeaxCYXBkcWWhg" name="PingPongProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_i0l_oHbKEeaxCYXBkcWWhg" name="PingPongProtocol">
        <interfaceRealization xmi:id="_i1ohcHbKEeaxCYXBkcWWhg" client="_i0l_oHbKEeaxCYXBkcWWhg" supplier="_i1ewcHbKEeaxCYXBkcWWhg" contract="_i1ewcHbKEeaxCYXBkcWWhg"/>
        <interfaceRealization xmi:id="_i13K8HbKEeaxCYXBkcWWhg" client="_i0l_oHbKEeaxCYXBkcWWhg" supplier="_i1y5gHbKEeaxCYXBkcWWhg" contract="_i1y5gHbKEeaxCYXBkcWWhg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_i1ewcHbKEeaxCYXBkcWWhg" name="PingPongProtocol">
        <ownedOperation xmi:id="_i2I3wHbKEeaxCYXBkcWWhg" name="pong"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_i1sL0HbKEeaxCYXBkcWWhg" name="PingPongProtocol~">
        <ownedOperation xmi:id="_i2rDQHbKEeaxCYXBkcWWhg" name="ping"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_i1xEUHbKEeaxCYXBkcWWhg" client="_i0l_oHbKEeaxCYXBkcWWhg" supplier="_i1sL0HbKEeaxCYXBkcWWhg"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_i1yScHbKEeaxCYXBkcWWhg" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_i1y5gHbKEeaxCYXBkcWWhg" name="PingPongProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_i14ZEHbKEeaxCYXBkcWWhg" client="_i0l_oHbKEeaxCYXBkcWWhg" supplier="_i1y5gHbKEeaxCYXBkcWWhg"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_i2e2AHbKEeaxCYXBkcWWhg" operation="_i2I3wHbKEeaxCYXBkcWWhg"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_i2wi0HbKEeaxCYXBkcWWhg" operation="_i2rDQHbKEeaxCYXBkcWWhg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i22CYHbKEeaxCYXBkcWWhg" name="Top" isActive="true">
      <ownedAttribute xmi:id="_i6HY0HbKEeaxCYXBkcWWhg" name="pinger" type="_i6LDMHbKEeaxCYXBkcWWhg" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_i9QzcHbKEeaxCYXBkcWWhg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i9QzcXbKEeaxCYXBkcWWhg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_i9RagHbKEeaxCYXBkcWWhg" name="ponger" type="_i9TPsHbKEeaxCYXBkcWWhg" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_i_QXg3bKEeaxCYXBkcWWhg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i_Q-kHbKEeaxCYXBkcWWhg" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_i_Q-kXbKEeaxCYXBkcWWhg">
        <name xsi:nil="true"/>
        <end xmi:id="_i_Ta0HbKEeaxCYXBkcWWhg" partWithPort="_i6HY0HbKEeaxCYXBkcWWhg" role="_i9NJEHbKEeaxCYXBkcWWhg"/>
        <end xmi:id="_i_Ta0XbKEeaxCYXBkcWWhg" partWithPort="_i9RagHbKEeaxCYXBkcWWhg" role="_i_OiUHbKEeaxCYXBkcWWhg"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i6LDMHbKEeaxCYXBkcWWhg" name="Pinger" classifierBehavior="_i68fQHbKEeaxCYXBkcWWhg" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_i9NJEHbKEeaxCYXBkcWWhg" name="pingPort" visibility="public" type="_i0l_oHbKEeaxCYXBkcWWhg" aggregation="composite" isBehavior="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_i9O-QHbKEeaxCYXBkcWWhg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i9O-QXbKEeaxCYXBkcWWhg" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_i68fQHbKEeaxCYXBkcWWhg" isReentrant="false">
        <name xsi:nil="true"/>
        <region xmi:id="_i7QoUHbKEeaxCYXBkcWWhg" name="Region">
          <transition xmi:id="_i9L68HbKEeaxCYXBkcWWhg" name="TransitionAction0" source="_i9AUwHbKEeaxCYXBkcWWhg" target="_ydX48KRJEeaiKImr-X46sg"/>
          <transition xmi:id="_i9PlUHbKEeaxCYXBkcWWhg" name="TransitionAction1" source="_i9D_IHbKEeaxCYXBkcWWhg" target="_i9D_IHbKEeaxCYXBkcWWhg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_i9PlUXbKEeaxCYXBkcWWhg">
              <language>C++</language>
              <body>    std::cout &lt;&lt; &quot;[Pinger] (t1:onPong)&quot; &lt;&lt; std::endl; 
</body>
            </effect>
            <trigger xmi:id="_i9PlUnbKEeaxCYXBkcWWhg" event="_i2e2AHbKEeaxCYXBkcWWhg" port="_i9NJEHbKEeaxCYXBkcWWhg"/>
          </transition>
          <transition xmi:id="_ydX48aRJEeaiKImr-X46sg" source="_ydX48KRJEeaiKImr-X46sg" target="_i9D_IHbKEeaxCYXBkcWWhg"/>
          <transition xmi:id="_ydX48qRJEeaiKImr-X46sg" name="__Debug__Trans__" source="_ydX48KRJEeaiKImr-X46sg" target="_ydX486RJEeaiKImr-X46sg"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_i9AUwHbKEeaxCYXBkcWWhg" name="i0"/>
          <subvertex xmi:type="uml:State" xmi:id="_i9D_IHbKEeaxCYXBkcWWhg" name="Playing">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_i9JesHbKEeaxCYXBkcWWhg">
              <name xsi:nil="true"/>
              <language>C++</language>
              <body>    std::cout &lt;&lt; &quot;[Pinger] (Playing:entry) sending ping&quot; &lt;&lt; std::endl;
    pingPort.ping().send();
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_ydPWEKRJEeaiKImr-X46sg" name="__Debug__Super__State__">
            <connectionPoint xmi:id="_ydX486RJEeaiKImr-X46sg" name="__Debug__Entry__" kind="entryPoint"/>
            <region xmi:id="_ydPWEaRJEeaiKImr-X46sg" name="Region">
              <transition xmi:id="_ydPWFaRJEeaiKImr-X46sg" name="TransitionAction0" source="_ydSZYKRJEeaiKImr-X46sg" target="_ydSZYaRJEeaiKImr-X46sg"/>
              <transition xmi:id="_ydQkMKRJEeaiKImr-X46sg" name="TransitionAction1" source="_ydTAcKRJEeaiKImr-X46sg" target="_ydU1oKRJEeaiKImr-X46sg">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ydRyUKRJEeaiKImr-X46sg" visibility="public" isReentrant="true">
                  <name xsi:nil="true"/>
                  <language>C++</language>
                  <body>    std::cout &lt;&lt; &quot;[Pinger] (t1:onPong)&quot; &lt;&lt; std::endl; 
</body>
                </effect>
                <trigger xmi:id="_ydRLQKRJEeaiKImr-X46sg" event="_i2e2AHbKEeaxCYXBkcWWhg" port="_i9NJEHbKEeaxCYXBkcWWhg">
                  <name xsi:nil="true"/>
                </trigger>
              </transition>
              <transition xmi:id="_ydSZYqRJEeaiKImr-X46sg" name="__Debug__Tran__After__Statei0" source="_ydPWEqRJEeaiKImr-X46sg" target="_ydSZYKRJEeaiKImr-X46sg"/>
              <transition xmi:id="_ydU1oaRJEeaiKImr-X46sg" name="__Debug__Tran__After__StatePlaying" source="_ydPWE6RJEeaiKImr-X46sg" target="_ydTAcKRJEeaiKImr-X46sg"/>
              <transition xmi:id="_ydU1oqRJEeaiKImr-X46sg" name="__Debug__Tran__Befor__StatePlaying" source="_ydU1oKRJEeaiKImr-X46sg" target="_ydPWE6RJEeaiKImr-X46sg"/>
              <transition xmi:id="_ydSZY6RJEeaiKImr-X46sg" name="__Debug__Tran__Befor__StatePlaying" source="_ydSZYaRJEeaiKImr-X46sg" target="_ydPWE6RJEeaiKImr-X46sg"/>
              <subvertex xmi:type="uml:Pseudostate" xmi:id="_ydPWEqRJEeaiKImr-X46sg" name="i0"/>
              <subvertex xmi:type="uml:State" xmi:id="_ydPWE6RJEeaiKImr-X46sg" name="Playing">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_ydPWFKRJEeaiKImr-X46sg" visibility="public" isReentrant="true">
                  <name xsi:nil="true"/>
                  <language>C++</language>
                  <body>    std::cout &lt;&lt; &quot;[Pinger] (Playing:entry) sending ping&quot; &lt;&lt; std::endl;
    pingPort.ping().send();
</body>
                </entry>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_ydU1oKRJEeaiKImr-X46sg" name="__Debug__State__After__Tran__Playing-Playing"/>
              <subvertex xmi:type="uml:State" xmi:id="_ydSZYKRJEeaiKImr-X46sg" name="__Debug__State__Befor__Tran__i0-Playing"/>
              <subvertex xmi:type="uml:State" xmi:id="_ydSZYaRJEeaiKImr-X46sg" name="__Debug__State__After__Tran__i0-Playing"/>
              <subvertex xmi:type="uml:State" xmi:id="_ydTAcKRJEeaiKImr-X46sg" name="__Debug__State__Befor__Tran__Playing-Playing"/>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_ydX48KRJEeaiKImr-X46sg" name="__Debug__Choice__" kind="choice"/>
        </region>
      </ownedBehavior>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i9TPsHbKEeaxCYXBkcWWhg" name="Ponger" classifierBehavior="_i99XAHbKEeaxCYXBkcWWhg" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_i_OiUHbKEeaxCYXBkcWWhg" name="pongPort" visibility="public" type="_i0l_oHbKEeaxCYXBkcWWhg" aggregation="composite" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_i_PwcHbKEeaxCYXBkcWWhg" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i_PwcXbKEeaxCYXBkcWWhg" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_i99XAHbKEeaxCYXBkcWWhg" isReentrant="false">
        <name xsi:nil="true"/>
        <region xmi:id="_i-BocHbKEeaxCYXBkcWWhg" name="Region">
          <transition xmi:id="_i_N7QXbKEeaxCYXBkcWWhg" name="TransitionAction0" source="_i_HNkHbKEeaxCYXBkcWWhg" target="_ydHaQKRJEeaiKImr-X46sg"/>
          <transition xmi:id="_i_QXgHbKEeaxCYXBkcWWhg" name="TransitionAction1" source="_i_Jp0HbKEeaxCYXBkcWWhg" target="_i_Jp0HbKEeaxCYXBkcWWhg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_i_QXgXbKEeaxCYXBkcWWhg">
              <language>C++</language>
              <body>    std::cout &lt;&lt; &quot;[Ponger] (t1:onPing) sending pong&quot; &lt;&lt; std::endl;
    pongPort.pong().send();
    //tada

</body>
            </effect>
            <trigger xmi:id="_i_QXgnbKEeaxCYXBkcWWhg" event="_i2wi0HbKEeaxCYXBkcWWhg" port="_i_OiUHbKEeaxCYXBkcWWhg"/>
          </transition>
          <transition xmi:id="_ydHaQaRJEeaiKImr-X46sg" source="_ydHaQKRJEeaiKImr-X46sg" target="_i_Jp0HbKEeaxCYXBkcWWhg"/>
          <transition xmi:id="_ydHaQqRJEeaiKImr-X46sg" name="__Debug__Trans__" source="_ydHaQKRJEeaiKImr-X46sg" target="_ydHaQ6RJEeaiKImr-X46sg"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_i_HNkHbKEeaxCYXBkcWWhg" name="i0"/>
          <subvertex xmi:type="uml:State" xmi:id="_i_Jp0HbKEeaxCYXBkcWWhg" name="Playing">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_i_N7QHbKEeaxCYXBkcWWhg">
              <name xsi:nil="true"/>
              <language>C++</language>
              <body>    std::cout &lt;&lt; &quot;[Ponger] (Playing:entry)&quot; &lt;&lt; std::endl; 
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_yc_ecKRJEeaiKImr-X46sg" name="__Debug__Super__State__">
            <connectionPoint xmi:id="_ydHaQ6RJEeaiKImr-X46sg" name="__Debug__Entry__" kind="entryPoint"/>
            <region xmi:id="_ydAFgKRJEeaiKImr-X46sg" name="Region">
              <transition xmi:id="_ydAskKRJEeaiKImr-X46sg" name="TransitionAction0" source="_ydBToaRJEeaiKImr-X46sg" target="_ydDI0KRJEeaiKImr-X46sg"/>
              <transition xmi:id="_ydAskaRJEeaiKImr-X46sg" name="TransitionAction1" source="_ydEW8KRJEeaiKImr-X46sg" target="_ydEW8aRJEeaiKImr-X46sg">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ydBToKRJEeaiKImr-X46sg" visibility="public" isReentrant="true">
                  <name xsi:nil="true"/>
                  <language>C++</language>
                  <body>    std::cout &lt;&lt; &quot;[Ponger] (t1:onPing) sending pong&quot; &lt;&lt; std::endl;
    pongPort.pong().send();
    //tada

</body>
                </effect>
                <trigger xmi:id="_ydAskqRJEeaiKImr-X46sg" event="_i2wi0HbKEeaxCYXBkcWWhg" port="_i_OiUHbKEeaxCYXBkcWWhg">
                  <name xsi:nil="true"/>
                </trigger>
              </transition>
              <transition xmi:id="_ydDv4KRJEeaiKImr-X46sg" name="__Debug__Tran__After__Statei0" source="_ydAFgaRJEeaiKImr-X46sg" target="_ydBToaRJEeaiKImr-X46sg"/>
              <transition xmi:id="_ydEW8qRJEeaiKImr-X46sg" name="__Debug__Tran__After__StatePlaying" source="_ydAFgqRJEeaiKImr-X46sg" target="_ydEW8KRJEeaiKImr-X46sg"/>
              <transition xmi:id="_ydEW86RJEeaiKImr-X46sg" name="__Debug__Tran__Befor__StatePlaying" source="_ydEW8aRJEeaiKImr-X46sg" target="_ydAFgqRJEeaiKImr-X46sg"/>
              <transition xmi:id="_ydDv4aRJEeaiKImr-X46sg" name="__Debug__Tran__Befor__StatePlaying" source="_ydDI0KRJEeaiKImr-X46sg" target="_ydAFgqRJEeaiKImr-X46sg"/>
              <subvertex xmi:type="uml:Pseudostate" xmi:id="_ydAFgaRJEeaiKImr-X46sg" name="i0"/>
              <subvertex xmi:type="uml:State" xmi:id="_ydAFgqRJEeaiKImr-X46sg" name="Playing">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_ydAFg6RJEeaiKImr-X46sg" visibility="public" isReentrant="true">
                  <name xsi:nil="true"/>
                  <language>C++</language>
                  <body>    std::cout &lt;&lt; &quot;[Ponger] (Playing:entry)&quot; &lt;&lt; std::endl; 
</body>
                </entry>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_ydDI0KRJEeaiKImr-X46sg" name="__Debug__State__After__Tran__i0-Playing"/>
              <subvertex xmi:type="uml:State" xmi:id="_ydEW8KRJEeaiKImr-X46sg" name="__Debug__State__Befor__Tran__Playing-Playing"/>
              <subvertex xmi:type="uml:State" xmi:id="_ydEW8aRJEeaiKImr-X46sg" name="__Debug__State__After__Tran__Playing-Playing"/>
              <subvertex xmi:type="uml:State" xmi:id="_ydBToaRJEeaiKImr-X46sg" name="__Debug__State__Befor__Tran__i0-Playing"/>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_ydHaQKRJEeaiKImr-X46sg" name="__Debug__Choice__" kind="choice"/>
        </region>
      </ownedBehavior>
    </packagedElement>
    <profileApplication xmi:id="_itX9UHbKEeaxCYXBkcWWhg">
      <eAnnotations xmi:id="_itbAoHbKEeaxCYXBkcWWhg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_ix9iYHbKEeaxCYXBkcWWhg">
      <eAnnotations xmi:id="_ix-JcHbKEeaxCYXBkcWWhg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
    <profileApplication xmi:id="_izZs0HbKEeaxCYXBkcWWhg">
      <eAnnotations xmi:id="_izaT4HbKEeaxCYXBkcWWhg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLRT_CPP/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:ProtocolContainer xmi:id="_i1LOcHbKEeaxCYXBkcWWhg"/>
  <UMLRealTime:RTMessageSet xmi:id="_i1jB4HbKEeaxCYXBkcWWhg"/>
  <UMLRealTime:RTMessageSet xmi:id="_i1vPIHbKEeaxCYXBkcWWhg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_i11VwHbKEeaxCYXBkcWWhg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_i15AIHbKEeaxCYXBkcWWhg"/>
  <UMLRealTime:Capsule xmi:id="_i6DHYHbKEeaxCYXBkcWWhg"/>
  <UMLRealTime:CapsulePart xmi:id="_i6H_4HbKEeaxCYXBkcWWhg"/>
  <UMLRealTime:Capsule xmi:id="_i62_sHbKEeaxCYXBkcWWhg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_i7yMwHbKEeaxCYXBkcWWhg" base_Region="_i7QoUHbKEeaxCYXBkcWWhg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_i894gHbKEeaxCYXBkcWWhg" base_StateMachine="_i68fQHbKEeaxCYXBkcWWhg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_i9A70HbKEeaxCYXBkcWWhg" base_Pseudostate="_i9AUwHbKEeaxCYXBkcWWhg"/>
  <UMLRTStateMachines:RTState xmi:id="_i9IQkHbKEeaxCYXBkcWWhg" base_State="_i9D_IHbKEeaxCYXBkcWWhg"/>
  <UMLRealTime:RTPort xmi:id="_i9NwIHbKEeaxCYXBkcWWhg"/>
  <UMLRealTime:CapsulePart xmi:id="_i9RagXbKEeaxCYXBkcWWhg"/>
  <UMLRealTime:Capsule xmi:id="_i95FkHbKEeaxCYXBkcWWhg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_i-RgEHbKEeaxCYXBkcWWhg" base_Region="_i-BocHbKEeaxCYXBkcWWhg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_i_ExUHbKEeaxCYXBkcWWhg" base_StateMachine="_i99XAHbKEeaxCYXBkcWWhg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_i_HNkXbKEeaxCYXBkcWWhg" base_Pseudostate="_i_HNkHbKEeaxCYXBkcWWhg"/>
  <UMLRTStateMachines:RTState xmi:id="_i_MtIHbKEeaxCYXBkcWWhg" base_State="_i_Jp0HbKEeaxCYXBkcWWhg"/>
  <UMLRealTime:RTPort xmi:id="_i_PJYHbKEeaxCYXBkcWWhg"/>
  <UMLRealTime:RTConnector xmi:id="_i_SMsHbKEeaxCYXBkcWWhg"/>
</xmi:XMI>
