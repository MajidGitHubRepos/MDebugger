<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_0vhJYNq9EeahI77Vg4Dl9Q" name="CarDoorLock">
    <eAnnotations xmi:id="_R8398NrKEeahI77Vg4Dl9Q" source="UMLRT_Default_top">
      <details xmi:id="_R84lANrKEeahI77Vg4Dl9Q" key="top_name" value="Debug__Top"/>
    </eAnnotations>
    <packageImport xmi:id="_rwDn4PFiEeaP3PiOkvHNkw">
      <importedPackage xmi:type="uml:Model" href="../CommGateWay/model.uml#_MZw7AAdxEeadtKuU2t6fMg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_iSbRENq_EeahI77Vg4Dl9Q" name="Car" isActive="true">
      <ownedAttribute xmi:id="_GVbv0NrBEeahI77Vg4Dl9Q" name="door1" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SnJA8NrgEeal5dJZNvUqew" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sm8zsNrgEeal5dJZNvUqew" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_LNSPkNrBEeahI77Vg4Dl9Q" name="centralLock" visibility="protected" type="_s7aB8Nq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_V8mg4NrgEeal5dJZNvUqew" name="door2" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_5AKKQNrgEeal5dJZNvUqew" name="door3" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_AVcVwNrhEeal5dJZNvUqew" name="door4" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedConnector xmi:id="_U4X_YNrCEeahI77Vg4Dl9Q" name="RTConnector1">
        <end xmi:id="_U4YmcNrCEeahI77Vg4Dl9Q" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_U4ZNgNrCEeahI77Vg4Dl9Q" partWithPort="_GVbv0NrBEeahI77Vg4Dl9Q" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
      <ownedConnector xmi:id="_bwP6gNrgEeal5dJZNvUqew" name="RTConnector2">
        <end xmi:id="_bwRvsNrgEeal5dJZNvUqew" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_bwRvsdrgEeal5dJZNvUqew" partWithPort="_V8mg4NrgEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-3w20NrgEeal5dJZNvUqew" name="RTConnector3">
        <end xmi:id="_-3ysANrgEeal5dJZNvUqew" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_-3zTENrgEeal5dJZNvUqew" partWithPort="_5AKKQNrgEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
      <ownedConnector xmi:id="_EUhacNrhEeal5dJZNvUqew" name="RTConnector4">
        <end xmi:id="_EUjPoNrhEeal5dJZNvUqew" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_EUjPodrhEeal5dJZNvUqew" partWithPort="_AVcVwNrhEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ls0UUNq_EeahI77Vg4Dl9Q" name="Door" isActive="true">
      <ownedAttribute xmi:id="_yAJcQNrBEeahI77Vg4Dl9Q" name="lock" visibility="protected" type="_xS9RANq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zv8SANrZEeal5dJZNvUqew" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zvPucNrZEeal5dJZNvUqew" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_-jLfANrBEeahI77Vg4Dl9Q" name="lockPort" visibility="public" type="_LXKZwNrAEeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_f3zGENrdEeal5dJZNvUqew" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f3ouANrdEeal5dJZNvUqew" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_-n9H8NraEeal5dJZNvUqew" name="RTConnector1">
        <end xmi:id="_-oCngNraEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_-oCngdraEeal5dJZNvUqew" partWithPort="_yAJcQNrBEeahI77Vg4Dl9Q" role="_WvH7ENrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xS9RANq_EeahI77Vg4Dl9Q" name="Lock" classifierBehavior="__KYzgNrCEeahI77Vg4Dl9Q" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_WvH7ENrBEeahI77Vg4Dl9Q" name="lockPort" visibility="public" type="_LXKZwNrAEeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite" isBehavior="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-JnYYNrVEeaBAosuR3tfxw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-JjG8NrVEeaBAosuR3tfxw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_r6YokPFiEeaP3PiOkvHNkw" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
        <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_r6dhEfFiEeaP3PiOkvHNkw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_r6dhEvFiEeaP3PiOkvHNkw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_r6nSE_FiEeaP3PiOkvHNkw" name="Debug__flag">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_r6nSFPFiEeaP3PiOkvHNkw" name="Debug__variablesData">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_r6nSFfFiEeaP3PiOkvHNkw" name="Debug__event"/>
      <ownedAttribute xmi:id="_r6yRMPFiEeaP3PiOkvHNkw" name="Debug__SRO"/>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="__KYzgNrCEeahI77Vg4Dl9Q" name="lockSM">
        <region xmi:id="_BAOTwNrDEeahI77Vg4Dl9Q" name="Region1">
          <transition xmi:id="_J75OQNrDEeahI77Vg4Dl9Q" name="lock" source="_r7xvsPFiEeaP3PiOkvHNkw" target="_FLMfYNrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Io77INrPEeay9vzLxQrrvQ" name="replyLock">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::lock&quot;,(char *)&quot;Debug__Path__lock&quot;,(char *)&quot;locked&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;The Lock &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is locked&quot;&lt;&lt;std::endl;
    lockPort.lockStatus(true).send();
</body>
            </effect>
          </transition>
          <transition xmi:id="_WQqykNrDEeahI77Vg4Dl9Q" name="init" source="_sEdxoPFiEeaP3PiOkvHNkw" target="_D7MQENrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_XjCGcNrQEeaBAosuR3tfxw" name="init">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::init&quot;,(char *)&quot;Debug__Path__init&quot;,(char *)&quot;unlocked&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;The Lock &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is unlocked&quot;&lt;&lt;std::endl;
</body>
            </effect>
          </transition>
          <transition xmi:id="_hi8_INrDEeahI77Vg4Dl9Q" name="unlock" source="_sD5J4PFiEeaP3PiOkvHNkw" target="_D7MQENrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_bx_0sNrlEeal5dJZNvUqew" name="replyUnlock">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::unlock&quot;,(char *)&quot;Debug__Path__unlock&quot;,(char *)&quot;unlocked&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;The Lock &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is unlocked&quot;&lt;&lt;std::endl;
    lockPort.lockStatus(false).send();
</body>
            </effect>
          </transition>
          <transition xmi:id="_v7FiUNrDEeahI77Vg4Dl9Q" name="twiceLock" source="_sEF-MPFiEeaP3PiOkvHNkw" target="_FLMfYNrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_D3ixQNrmEeal5dJZNvUqew" name="replyTwiceUnlock">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::twiceLock&quot;,(char *)&quot;Debug__Path__twiceLock&quot;,(char *)&quot;locked&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;The Lock   &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is already unlocked&quot;&lt;&lt;std::endl;
    lockPort.lockStatus(false).send();
</body>
            </effect>
          </transition>
          <transition xmi:id="_5iMmgNrDEeahI77Vg4Dl9Q" name="twiceUnlock" source="_sEPvMPFiEeaP3PiOkvHNkw" target="_D7MQENrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_-X__YNrlEeal5dJZNvUqew" name="replyTwiceLock">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::twiceUnlock&quot;,(char *)&quot;Debug__Path__twiceUnlock&quot;,(char *)&quot;unlocked&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;The Lock   &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is already unlocked&quot;&lt;&lt;std::endl;
    lockPort.lockStatus(true).send();
</body>
            </effect>
          </transition>
          <transition xmi:id="_r7xvtfFiEeaP3PiOkvHNkw" name="Debug__lock" source="_D7MQENrDEeahI77Vg4Dl9Q" target="_r7xvsPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r7xvtvFiEeaP3PiOkvHNkw" name="Debug__lock__3">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__lock&quot;,(char *)&quot;unlocked&quot;,(char *)&quot;Debug__Path__lock&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="__mJ4wNreEeal5dJZNvUqew" name="lock" event="_XN1s0NrAEeahI77Vg4Dl9Q" port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_r7y90PFiEeaP3PiOkvHNkw" name="Debug__lock__S" guard="_r7y90vFiEeaP3PiOkvHNkw" source="_r7xvsPFiEeaP3PiOkvHNkw" target="_r7xvs_FiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_r7y90vFiEeaP3PiOkvHNkw" name="Debug__Guardlock">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_r7y90fFiEeaP3PiOkvHNkw" name="Debug__Guardlock">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;unlocked&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r7y90_FiEeaP3PiOkvHNkw" name="Debug__lock__S__5">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__lock__S&quot;,(char *)&quot;Debug__Path__lock&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_r7zk4PFiEeaP3PiOkvHNkw" name="Debug__lock__E" source="_r7xvtPFiEeaP3PiOkvHNkw" target="_FLMfYNrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r7zk4fFiEeaP3PiOkvHNkw" name="Debug__lock__E__7">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__lock__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;locked&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_r70L8PFiEeaP3PiOkvHNkw" name="Debug__lock__dbg" source="_r7xvsfFiEeaP3PiOkvHNkw" target="_r7xvsfFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_r70L8vFiEeaP3PiOkvHNkw" name="Debug__lock__dbg__9">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__lock__dbg&quot;,(char *)&quot;Debug__C__lock&quot;,(char *)&quot;Debug__C__lock&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_r70L8fFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_r6YokPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sD5w8fFiEeaP3PiOkvHNkw" name="Debug__unlock" source="_FLMfYNrDEeahI77Vg4Dl9Q" target="_sD5J4PFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sD5w8vFiEeaP3PiOkvHNkw" name="Debug__unlock__25">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__unlock&quot;,(char *)&quot;locked&quot;,(char *)&quot;Debug__Path__unlock&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_ggdK4NrEEeahI77Vg4Dl9Q" name="unlock" event="_Zlrt8NrAEeahI77Vg4Dl9Q" port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_sD6YAPFiEeaP3PiOkvHNkw" name="Debug__unlock__S" guard="_sD6_EfFiEeaP3PiOkvHNkw" source="_sD5J4PFiEeaP3PiOkvHNkw" target="_sD5J4_FiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sD6_EfFiEeaP3PiOkvHNkw" name="Debug__Guardunlock">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sD6_EPFiEeaP3PiOkvHNkw" name="Debug__Guardunlock">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;locked&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sD6_EvFiEeaP3PiOkvHNkw" name="Debug__unlock__S__27">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__unlock__S&quot;,(char *)&quot;Debug__Path__unlock&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sD7mIPFiEeaP3PiOkvHNkw" name="Debug__unlock__E" source="_sD5w8PFiEeaP3PiOkvHNkw" target="_D7MQENrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sD7mIfFiEeaP3PiOkvHNkw" name="Debug__unlock__E__29">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__unlock__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;unlocked&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sD8NMPFiEeaP3PiOkvHNkw" name="Debug__unlock__dbg" source="_sD5J4fFiEeaP3PiOkvHNkw" target="_sD5J4fFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sD8NMvFiEeaP3PiOkvHNkw" name="Debug__unlock__dbg__31">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__unlock__dbg&quot;,(char *)&quot;Debug__C__unlock&quot;,(char *)&quot;Debug__C__unlock&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sD8NMfFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_r6YokPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sEF-NfFiEeaP3PiOkvHNkw" name="Debug__twiceLock" source="_FLMfYNrDEeahI77Vg4Dl9Q" target="_sEF-MPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEF-NvFiEeaP3PiOkvHNkw" name="Debug__twiceLock__47">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__twiceLock&quot;,(char *)&quot;locked&quot;,(char *)&quot;Debug__Path__twiceLock&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_GTLJMNrFEeahI77Vg4Dl9Q" name="twiceLock" event="_XN1s0NrAEeahI77Vg4Dl9Q" port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_sEGlQPFiEeaP3PiOkvHNkw" name="Debug__twiceLock__S" guard="_sEGlQvFiEeaP3PiOkvHNkw" source="_sEF-MPFiEeaP3PiOkvHNkw" target="_sEF-M_FiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sEGlQvFiEeaP3PiOkvHNkw" name="Debug__GuardtwiceLock">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sEGlQfFiEeaP3PiOkvHNkw" name="Debug__GuardtwiceLock">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;locked&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEGlQ_FiEeaP3PiOkvHNkw" name="Debug__twiceLock__S__49">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__twiceLock__S&quot;,(char *)&quot;Debug__Path__twiceLock&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sEHMUPFiEeaP3PiOkvHNkw" name="Debug__twiceLock__E" source="_sEF-NPFiEeaP3PiOkvHNkw" target="_FLMfYNrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEHMUfFiEeaP3PiOkvHNkw" name="Debug__twiceLock__E__51">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__twiceLock__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;locked&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sEHzYPFiEeaP3PiOkvHNkw" name="Debug__twiceLock__dbg" source="_sEF-MfFiEeaP3PiOkvHNkw" target="_sEF-MfFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEHzYvFiEeaP3PiOkvHNkw" name="Debug__twiceLock__dbg__53">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__twiceLock__dbg&quot;,(char *)&quot;Debug__C__twiceLock&quot;,(char *)&quot;Debug__C__twiceLock&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sEHzYfFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_r6YokPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sEPvNfFiEeaP3PiOkvHNkw" name="Debug__twiceUnlock" source="_D7MQENrDEeahI77Vg4Dl9Q" target="_sEPvMPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEPvNvFiEeaP3PiOkvHNkw" name="Debug__twiceUnlock__69">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__twiceUnlock&quot;,(char *)&quot;unlocked&quot;,(char *)&quot;Debug__Path__twiceUnlock&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_Wjd-gNreEeal5dJZNvUqew" event="_Zlrt8NrAEeahI77Vg4Dl9Q" port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_sEQWQPFiEeaP3PiOkvHNkw" name="Debug__twiceUnlock__S" guard="_sEQ9UPFiEeaP3PiOkvHNkw" source="_sEPvMPFiEeaP3PiOkvHNkw" target="_sEPvM_FiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sEQ9UPFiEeaP3PiOkvHNkw" name="Debug__GuardtwiceUnlock">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sEQWQfFiEeaP3PiOkvHNkw" name="Debug__GuardtwiceUnlock">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;unlocked&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEQ9UfFiEeaP3PiOkvHNkw" name="Debug__twiceUnlock__S__71">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__twiceUnlock__S&quot;,(char *)&quot;Debug__Path__twiceUnlock&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sEQ9UvFiEeaP3PiOkvHNkw" name="Debug__twiceUnlock__E" source="_sEPvNPFiEeaP3PiOkvHNkw" target="_D7MQENrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sERkYPFiEeaP3PiOkvHNkw" name="Debug__twiceUnlock__E__73">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__twiceUnlock__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;unlocked&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sERkYfFiEeaP3PiOkvHNkw" name="Debug__twiceUnlock__dbg" source="_sEPvMfFiEeaP3PiOkvHNkw" target="_sEPvMfFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sERkY_FiEeaP3PiOkvHNkw" name="Debug__twiceUnlock__dbg__75">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__twiceUnlock__dbg&quot;,(char *)&quot;Debug__C__twiceUnlock&quot;,(char *)&quot;Debug__C__twiceUnlock&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sERkYvFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_r6YokPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sEeYtPFiEeaP3PiOkvHNkw" name="Debug__init" source="_sErNAPFiEeaP3PiOkvHNkw" target="_sEdxoPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEe_wPFiEeaP3PiOkvHNkw" name="Debug__init__91">
              <language>C++</language>
              <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;locked&quot;,&quot;twiceLock&quot;,&quot;locked&quot;,&quot;lock&quot;,&quot;Locking&quot;);
Debug__SRO.addTransitionsFromState(&quot;unlocked&quot;,&quot;twiceUnlock&quot;,&quot;unlocked&quot;,&quot;unlock&quot;,&quot;Locking&quot;);
Debug__SRO.addTransitionsFromState(&quot;unlocked&quot;,&quot;lock&quot;,&quot;locked&quot;,&quot;lock&quot;,&quot;Locking&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;init&quot;,&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;locked&quot;,&quot;unlock&quot;,&quot;unlocked&quot;,&quot;unlock&quot;,&quot;Locking&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
            </effect>
            <trigger xmi:id="_sEr0EPFiEeaP3PiOkvHNkw" name="ConnectionEstablished" port="_r6YokPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
            </trigger>
          </transition>
          <transition xmi:id="_sEfm0PFiEeaP3PiOkvHNkw" name="Debug__init__S" guard="_sEfm0vFiEeaP3PiOkvHNkw" source="_sEdxoPFiEeaP3PiOkvHNkw" target="_sEeYsvFiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sEfm0vFiEeaP3PiOkvHNkw" name="Debug__Guardinit">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sEfm0fFiEeaP3PiOkvHNkw" name="Debug__Guardinit">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;Initial1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEgN4PFiEeaP3PiOkvHNkw" name="Debug__init__S__93">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__init__S&quot;,(char *)&quot;Debug__Path__init&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sEg08PFiEeaP3PiOkvHNkw" name="Debug__init__E" source="_sEeYs_FiEeaP3PiOkvHNkw" target="_D7MQENrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEg08fFiEeaP3PiOkvHNkw" name="Debug__init__E__95">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__init__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;unlocked&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sEhcAPFiEeaP3PiOkvHNkw" name="Debug__init__dbg" source="_sEeYsPFiEeaP3PiOkvHNkw" target="_sEeYsPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEhcAvFiEeaP3PiOkvHNkw" name="Debug__init__dbg__97">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__init__dbg&quot;,(char *)&quot;Debug__C__init&quot;,(char *)&quot;Debug__C__init&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sEhcAfFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_r6YokPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sErNAfFiEeaP3PiOkvHNkw" name="Debug__InitDebug" source="_Cz87MNrDEeahI77Vg4Dl9Q" target="_sErNAPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sErNAvFiEeaP3PiOkvHNkw" name="DebugCheck">
              <language>C++</language>
              <body>std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
std::string tempS;
std::cout&lt;&lt;&quot;Enter 1 for running in debug mode, any other key for normal model\n&quot;;
std::cin>> tempS;
if (tempS==&quot;1&quot;)
    this->Debug__SRO.setExecMode(Stepping);
else
    this->Debug__SRO.setExecMode(Running);
</body>
            </effect>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_Cz87MNrDEeahI77Vg4Dl9Q" name="Initial1"/>
          <subvertex xmi:type="uml:State" xmi:id="_D7MQENrDEeahI77Vg4Dl9Q" name="unlocked">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sEuQUPFiEeaP3PiOkvHNkw" name="unlocked__111">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;unlocked&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::unlocked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

}</body>
            </entry>
            <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEuQUfFiEeaP3PiOkvHNkw" name="unlocked__112">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;unlocked&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::unlocked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

}</body>
            </exit>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_FLMfYNrDEeahI77Vg4Dl9Q" name="locked">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sEtCMPFiEeaP3PiOkvHNkw" name="locked__109">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;locked&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::locked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

}</body>
            </entry>
            <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEtpQPFiEeaP3PiOkvHNkw" name="locked__110">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;locked&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::locked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

}</body>
            </exit>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_r7xvsPFiEeaP3PiOkvHNkw" name="Debug__Path__lock" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_r7xvsfFiEeaP3PiOkvHNkw" name="Debug__C__lock">
            <connectionPoint xmi:id="_r7xvs_FiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_r7xvtPFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_r7xvsvFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_r71aEvFiEeaP3PiOkvHNkw" name="Debug__init__trans__lock" source="_r7xvs_FiEeaP3PiOkvHNkw" target="_r70L8_FiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sD04cPFiEeaP3PiOkvHNkw" name="Debug__init__trans__lock__15">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__init__trans__lock&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__unlocked&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_r71aE_FiEeaP3PiOkvHNkw" name="Debug__Ex__unlocked" source="_r70L8_FiEeaP3PiOkvHNkw" target="_r70zAPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sD1fgPFiEeaP3PiOkvHNkw" name="Debug__Ex__unlocked__17">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__Ex__unlocked&quot;,(char *)&quot;Debug__B__Ex__unlocked&quot;,(char *)&quot;Debug__B__Ac__lock&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_r71aFPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_r71aFfFiEeaP3PiOkvHNkw" name="Debug__AC__lock" source="_r70zAPFiEeaP3PiOkvHNkw" target="_r70zAvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sDxOEPFiEeaP3PiOkvHNkw" name="replyLock" visibility="public" isReentrant="true">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__AC__lock&quot;,(char *)&quot;Debug__B__Ac__lock&quot;,(char *)&quot;Debug__A__Ac__lock&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;The Lock &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is locked&quot;&lt;&lt;std::endl;
    lockPort.lockStatus(true).send();
</body>
                </effect>
                <trigger xmi:id="_r72BIPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sDxOEfFiEeaP3PiOkvHNkw" name="Debug__En__locked" source="_r70zAvFiEeaP3PiOkvHNkw" target="_r71aEPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sD2toPFiEeaP3PiOkvHNkw" name="Debug__En__locked__20">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__En__locked&quot;,(char *)&quot;Debug__A__Ac__lock&quot;,(char *)&quot;Debug__A__En__locked&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sDxOEvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sDxOE_FiEeaP3PiOkvHNkw" name="Debug__end__trans__lock" source="_r71aEPFiEeaP3PiOkvHNkw" target="_r7xvtPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sD3UsPFiEeaP3PiOkvHNkw" name="Debug__end__trans__lock__22">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__end__trans__lock&quot;,(char *)&quot;Debug__A__En__locked&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sDx1IPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_r70L8_FiEeaP3PiOkvHNkw" name="Debug__B__Ex__unlocked">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_r70L9PFiEeaP3PiOkvHNkw" name="Debug__B__Ex__unlocked">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__B__Ex__unlocked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sDycMPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__unlocked__10">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__B__Ex__unlocked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_r70zAPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__lock">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_r70zAfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__lock">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__B__Ac__lock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;lock&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sDzDQPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__lock__11">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__B__Ac__lock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_r70zAvFiEeaP3PiOkvHNkw" name="Debug__A__Ac__lock">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_r70zA_FiEeaP3PiOkvHNkw" name="Debug__A__Ac__lock">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__A__Ac__lock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;lock&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;locked&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sDzqUPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__lock__12">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__A__Ac__lock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_r71aEPFiEeaP3PiOkvHNkw" name="Debug__A__En__locked">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_r71aEfFiEeaP3PiOkvHNkw" name="Debug__A__En__locked">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__A__En__locked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;locked&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sD0RYPFiEeaP3PiOkvHNkw" name="Debug__A__En__locked__13">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__lock::Region1::Debug__A__En__locked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sD5J4PFiEeaP3PiOkvHNkw" name="Debug__Path__unlock" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sD5J4fFiEeaP3PiOkvHNkw" name="Debug__C__unlock">
            <connectionPoint xmi:id="_sD5J4_FiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sD5w8PFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sD5J4vFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sD-pcPFiEeaP3PiOkvHNkw" name="Debug__init__trans__unlock" source="_sD5J4_FiEeaP3PiOkvHNkw" target="_sD80QPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEC64PFiEeaP3PiOkvHNkw" name="Debug__init__trans__unlock__37">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__init__trans__unlock&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__locked&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sD-pcfFiEeaP3PiOkvHNkw" name="Debug__Ex__locked" source="_sD80QPFiEeaP3PiOkvHNkw" target="_sD80QvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEDh8PFiEeaP3PiOkvHNkw" name="Debug__Ex__locked__39">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__Ex__locked&quot;,(char *)&quot;Debug__B__Ex__locked&quot;,(char *)&quot;Debug__B__Ac__unlock&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sD-pcvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sD_QgPFiEeaP3PiOkvHNkw" name="Debug__AC__unlock" source="_sD80QvFiEeaP3PiOkvHNkw" target="_sD9bUPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sD_QgvFiEeaP3PiOkvHNkw" name="replyUnlock" visibility="public" isReentrant="true">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__AC__unlock&quot;,(char *)&quot;Debug__B__Ac__unlock&quot;,(char *)&quot;Debug__A__Ac__unlock&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;The Lock &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is unlocked&quot;&lt;&lt;std::endl;
    lockPort.lockStatus(false).send();
</body>
                </effect>
                <trigger xmi:id="_sD_QgfFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sD_3kPFiEeaP3PiOkvHNkw" name="Debug__En__unlocked" source="_sD9bUPFiEeaP3PiOkvHNkw" target="_sD-CYPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEEJAPFiEeaP3PiOkvHNkw" name="Debug__En__unlocked__42">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__En__unlocked&quot;,(char *)&quot;Debug__A__Ac__unlock&quot;,(char *)&quot;Debug__A__En__unlocked&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sD_3kfFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sD_3kvFiEeaP3PiOkvHNkw" name="Debug__end__trans__unlock" source="_sD-CYPFiEeaP3PiOkvHNkw" target="_sD5w8PFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEEwEPFiEeaP3PiOkvHNkw" name="Debug__end__trans__unlock__44">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__end__trans__unlock&quot;,(char *)&quot;Debug__A__En__unlocked&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sEAeoPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sD80QPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__locked">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sD80QfFiEeaP3PiOkvHNkw" name="Debug__B__Ex__locked">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__B__Ex__locked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;locked&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEAeofFiEeaP3PiOkvHNkw" name="Debug__B__Ex__locked__32">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__B__Ex__locked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sD80QvFiEeaP3PiOkvHNkw" name="Debug__B__Ac__unlock">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sD80Q_FiEeaP3PiOkvHNkw" name="Debug__B__Ac__unlock">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__B__Ac__unlock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;locked&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;unlock&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEBFsPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__unlock__33">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__B__Ac__unlock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sD9bUPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__unlock">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sD9bUfFiEeaP3PiOkvHNkw" name="Debug__A__Ac__unlock">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__A__Ac__unlock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;unlock&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEBswPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__unlock__34">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__A__Ac__unlock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sD-CYPFiEeaP3PiOkvHNkw" name="Debug__A__En__unlocked">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sD-CYfFiEeaP3PiOkvHNkw" name="Debug__A__En__unlocked">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__A__En__unlocked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sECT0PFiEeaP3PiOkvHNkw" name="Debug__A__En__unlocked__35">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__unlock::Region1::Debug__A__En__unlocked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sEF-MPFiEeaP3PiOkvHNkw" name="Debug__Path__twiceLock" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sEF-MfFiEeaP3PiOkvHNkw" name="Debug__C__twiceLock">
            <connectionPoint xmi:id="_sEF-M_FiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sEF-NPFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sEF-MvFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sEKPoPFiEeaP3PiOkvHNkw" name="Debug__init__trans__twiceLock" source="_sEF-M_FiEeaP3PiOkvHNkw" target="_sEIacPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEMr4PFiEeaP3PiOkvHNkw" name="Debug__init__trans__twiceLock__59">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__init__trans__twiceLock&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__locked&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sEKPofFiEeaP3PiOkvHNkw" name="Debug__Ex__locked" source="_sEIacPFiEeaP3PiOkvHNkw" target="_sEJBgPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sENS8PFiEeaP3PiOkvHNkw" name="Debug__Ex__locked__61">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__Ex__locked&quot;,(char *)&quot;Debug__B__Ex__locked&quot;,(char *)&quot;Debug__B__Ac__twiceLock&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sEKPovFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sEKPo_FiEeaP3PiOkvHNkw" name="Debug__AC__twiceLock" source="_sEJBgPFiEeaP3PiOkvHNkw" target="_sEJokPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEKPpfFiEeaP3PiOkvHNkw" name="replyTwiceUnlock" visibility="public" isReentrant="true">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__AC__twiceLock&quot;,(char *)&quot;Debug__B__Ac__twiceLock&quot;,(char *)&quot;Debug__A__Ac__twiceLock&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;The Lock   &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is already unlocked&quot;&lt;&lt;std::endl;
    lockPort.lockStatus(false).send();
</body>
                </effect>
                <trigger xmi:id="_sEKPpPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sEKPpvFiEeaP3PiOkvHNkw" name="Debug__En__locked" source="_sEJokPFiEeaP3PiOkvHNkw" target="_sEJokvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEN6APFiEeaP3PiOkvHNkw" name="Debug__En__locked__64">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__En__locked&quot;,(char *)&quot;Debug__A__Ac__twiceLock&quot;,(char *)&quot;Debug__A__En__locked&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sEKPp_FiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sEKPqPFiEeaP3PiOkvHNkw" name="Debug__end__trans__twiceLock" source="_sEJokvFiEeaP3PiOkvHNkw" target="_sEF-NPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEOhEPFiEeaP3PiOkvHNkw" name="Debug__end__trans__twiceLock__66">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__end__trans__twiceLock&quot;,(char *)&quot;Debug__A__En__locked&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sEKPqfFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sEIacPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__locked">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sEIacfFiEeaP3PiOkvHNkw" name="Debug__B__Ex__locked">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__B__Ex__locked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;locked&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEK2sPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__locked__54">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__B__Ex__locked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sEJBgPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__twiceLock">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sEJBgfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__twiceLock">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__B__Ac__twiceLock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;locked&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;twiceLock&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sELdwPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__twiceLock__55">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__B__Ac__twiceLock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sEJokPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__twiceLock">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sEJokfFiEeaP3PiOkvHNkw" name="Debug__A__Ac__twiceLock">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__A__Ac__twiceLock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;twiceLock&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;locked&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sELdwfFiEeaP3PiOkvHNkw" name="Debug__A__Ac__twiceLock__56">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__A__Ac__twiceLock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sEJokvFiEeaP3PiOkvHNkw" name="Debug__A__En__locked">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sEJok_FiEeaP3PiOkvHNkw" name="Debug__A__En__locked">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__A__En__locked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;locked&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEME0PFiEeaP3PiOkvHNkw" name="Debug__A__En__locked__57">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceLock::Region1::Debug__A__En__locked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sEPvMPFiEeaP3PiOkvHNkw" name="Debug__Path__twiceUnlock" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sEPvMfFiEeaP3PiOkvHNkw" name="Debug__C__twiceUnlock">
            <connectionPoint xmi:id="_sEPvM_FiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sEPvNPFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sEPvMvFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sEUAovFiEeaP3PiOkvHNkw" name="Debug__init__trans__twiceUnlock" source="_sEPvM_FiEeaP3PiOkvHNkw" target="_sESLcPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEaHQPFiEeaP3PiOkvHNkw" name="Debug__init__trans__twiceUnlock__81">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__init__trans__twiceUnlock&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__unlocked&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sEUAo_FiEeaP3PiOkvHNkw" name="Debug__Ex__unlocked" source="_sESLcPFiEeaP3PiOkvHNkw" target="_sETZkPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEaHQfFiEeaP3PiOkvHNkw" name="Debug__Ex__unlocked__83">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__Ex__unlocked&quot;,(char *)&quot;Debug__B__Ex__unlocked&quot;,(char *)&quot;Debug__B__Ac__twiceUnlock&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sEUApPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sEUnsPFiEeaP3PiOkvHNkw" name="Debug__AC__twiceUnlock" source="_sETZkPFiEeaP3PiOkvHNkw" target="_sETZkvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEUnsvFiEeaP3PiOkvHNkw" name="replyTwiceLock" visibility="public" isReentrant="true">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__AC__twiceUnlock&quot;,(char *)&quot;Debug__B__Ac__twiceUnlock&quot;,(char *)&quot;Debug__A__Ac__twiceUnlock&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;The Lock   &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is already unlocked&quot;&lt;&lt;std::endl;
    lockPort.lockStatus(true).send();
</body>
                </effect>
                <trigger xmi:id="_sEUnsfFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sEUns_FiEeaP3PiOkvHNkw" name="Debug__En__unlocked" source="_sETZkvFiEeaP3PiOkvHNkw" target="_sEUAoPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEbVYPFiEeaP3PiOkvHNkw" name="Debug__En__unlocked__86">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__En__unlocked&quot;,(char *)&quot;Debug__A__Ac__twiceUnlock&quot;,(char *)&quot;Debug__A__En__unlocked&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sEUntPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sEUntfFiEeaP3PiOkvHNkw" name="Debug__end__trans__twiceUnlock" source="_sEUAoPFiEeaP3PiOkvHNkw" target="_sEPvNPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEb8cPFiEeaP3PiOkvHNkw" name="Debug__end__trans__twiceUnlock__88">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__end__trans__twiceUnlock&quot;,(char *)&quot;Debug__A__En__unlocked&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sEV10PFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sESLcPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__unlocked">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sESLcfFiEeaP3PiOkvHNkw" name="Debug__B__Ex__unlocked">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__B__Ex__unlocked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEV10fFiEeaP3PiOkvHNkw" name="Debug__B__Ex__unlocked__76">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__B__Ex__unlocked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sETZkPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__twiceUnlock">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sETZkfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__twiceUnlock">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__B__Ac__twiceUnlock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;twiceUnlock&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEYSEPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__twiceUnlock__77">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__B__Ac__twiceUnlock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sETZkvFiEeaP3PiOkvHNkw" name="Debug__A__Ac__twiceUnlock">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sETZk_FiEeaP3PiOkvHNkw" name="Debug__A__Ac__twiceUnlock">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__A__Ac__twiceUnlock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;twiceUnlock&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEY5IPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__twiceUnlock__78">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__A__Ac__twiceUnlock&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sEUAoPFiEeaP3PiOkvHNkw" name="Debug__A__En__unlocked">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sEUAofFiEeaP3PiOkvHNkw" name="Debug__A__En__unlocked">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__A__En__unlocked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEZgMPFiEeaP3PiOkvHNkw" name="Debug__A__En__unlocked__79">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__twiceUnlock::Region1::Debug__A__En__unlocked&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sEdxoPFiEeaP3PiOkvHNkw" name="Debug__Path__init" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sEeYsPFiEeaP3PiOkvHNkw" name="Debug__C__init">
            <connectionPoint xmi:id="_sEeYsvFiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sEeYs_FiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sEeYsfFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sEiqIvFiEeaP3PiOkvHNkw" name="Debug__init__trans__init" source="_sEeYsvFiEeaP3PiOkvHNkw" target="_sEiDEPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEowwPFiEeaP3PiOkvHNkw" name="Debug__init__trans__init__102">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__init::Region1::Debug__init__trans__init&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__init&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sEiqI_FiEeaP3PiOkvHNkw" name="Debug__Ac__init" source="_sEiDEPFiEeaP3PiOkvHNkw" target="_sEiDEvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEjRMPFiEeaP3PiOkvHNkw" name="init" visibility="public" isReentrant="true">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__init::Region1::Debug__Ac__init&quot;,(char *)&quot;Debug__B__Ac__init&quot;,(char *)&quot;Debug__A__Ac__init&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;The Lock &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is unlocked&quot;&lt;&lt;std::endl;
</body>
                </effect>
                <trigger xmi:id="_sEiqJPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sEjRMfFiEeaP3PiOkvHNkw" name="Debug__En__unlocked" source="_sEiDEvFiEeaP3PiOkvHNkw" target="_sEiqIPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEpX0PFiEeaP3PiOkvHNkw" name="Debug__En__unlocked__105">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__init::Region1::Debug__En__unlocked&quot;,(char *)&quot;Debug__A__Ac__init&quot;,(char *)&quot;Debug__A__En__init&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sEjRMvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sEltcPFiEeaP3PiOkvHNkw" name="Debug__end__trans__init" source="_sEiqIPFiEeaP3PiOkvHNkw" target="_sEeYs_FiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sEpX0fFiEeaP3PiOkvHNkw" name="Debug__end__trans__init__107">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__init::Region1::Debug__end__trans__init&quot;,(char *)&quot;Debug__A__En__init&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sEltcfFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_r6YokPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sEiDEPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__init">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sEiDEfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__init">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__init::Region1::Debug__B__Ac__init&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;init&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEm7kPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__init__98">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__init::Region1::Debug__B__Ac__init&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sEiDEvFiEeaP3PiOkvHNkw" name="Debug__A__Ac__init">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sEiDE_FiEeaP3PiOkvHNkw" name="Debug__A__Ac__init">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__init::Region1::Debug__A__Ac__init&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;init&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEnioPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__init__99">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__init::Region1::Debug__A__Ac__init&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sEiqIPFiEeaP3PiOkvHNkw" name="Debug__A__En__init">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sEiqIfFiEeaP3PiOkvHNkw" name="Debug__A__En__init">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__init::Region1::Debug__A__En__init&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sEoJsPFiEeaP3PiOkvHNkw" name="Debug__A__En__init__100">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::Lock::lockSM::Region1::Debug__C__init::Region1::Debug__A__En__init&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_sErNAPFiEeaP3PiOkvHNkw" name="Debug__InitState"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_r6mD8fFiEeaP3PiOkvHNkw" name="Debug__variablesViewMethod" specification="_r6mD8PFiEeaP3PiOkvHNkw">
        <language>C++</language>
        <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_r6nSEvFiEeaP3PiOkvHNkw" name="Debug__variablesChange" specification="_r6mrAPFiEeaP3PiOkvHNkw">
        <language>C++</language>
        <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_r7usY_FiEeaP3PiOkvHNkw" name="Debug__sendEvent" specification="_r7QyUPFiEeaP3PiOkvHNkw">
        <language>C++</language>
        <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_r6mD8PFiEeaP3PiOkvHNkw" name="Debug__variablesView" visibility="private" method="_r6mD8fFiEeaP3PiOkvHNkw"/>
      <ownedOperation xmi:id="_r6mrAPFiEeaP3PiOkvHNkw" name="Debug__variablesChange" visibility="private" method="_r6nSEvFiEeaP3PiOkvHNkw">
        <ownedParameter xmi:id="_r6mrAfFiEeaP3PiOkvHNkw" name="methodReturn" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r6nSEPFiEeaP3PiOkvHNkw" name="varName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r6nSEfFiEeaP3PiOkvHNkw" name="varValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_r7QyUPFiEeaP3PiOkvHNkw" name="Debug__sendEvent" visibility="private" method="_r7usY_FiEeaP3PiOkvHNkw">
        <ownedParameter xmi:id="_r7QyUfFiEeaP3PiOkvHNkw" name="eventSourceKind">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r7YuIPFiEeaP3PiOkvHNkw" name="eventType">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r7gp8PFiEeaP3PiOkvHNkw" name="instanceName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r7nXoPFiEeaP3PiOkvHNkw" name="capsuleIndex">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r7nXofFiEeaP3PiOkvHNkw" name="signalName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r7uFUPFiEeaP3PiOkvHNkw" name="capsuleName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r7uFUfFiEeaP3PiOkvHNkw" name="sourceName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r7usYPFiEeaP3PiOkvHNkw" name="reserve1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r7usYfFiEeaP3PiOkvHNkw" name="reserve2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r7usYvFiEeaP3PiOkvHNkw" name="reserve3">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_s7aB8Nq_EeahI77Vg4Dl9Q" name="CentralLock" classifierBehavior="_mTK68NrFEeahI77Vg4Dl9Q" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_k3gyENrBEeahI77Vg4Dl9Q" name="lockPort" visibility="public" type="_LXKZwNrAEeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fVbt8NrfEeal5dJZNvUqew" value="4"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fVTyINrfEeal5dJZNvUqew" value="4"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_Cey60NrUEeaBAosuR3tfxw" name="startupTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="pathmap://UMLRTRTSLIB/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_pzTr8NroEeal5dJZNvUqew" name="tmpInt">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_t1vmoNroEeal5dJZNvUqew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_u29zENroEeal5dJZNvUqew" name="locksCount">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_zKDY4NroEeal5dJZNvUqew" value="4"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_rwdQgPFiEeaP3PiOkvHNkw" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
        <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_r4ytIfFiEeaP3PiOkvHNkw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_r4ytIvFiEeaP3PiOkvHNkw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_r5BWofFiEeaP3PiOkvHNkw" name="Debug__flag">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_r5B9sPFiEeaP3PiOkvHNkw" name="Debug__variablesData">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_r5B9sfFiEeaP3PiOkvHNkw" name="Debug__event"/>
      <ownedAttribute xmi:id="_r5QAIPFiEeaP3PiOkvHNkw" name="Debug__SRO"/>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_mTK68NrFEeahI77Vg4Dl9Q" name="centralLockSM">
        <region xmi:id="_oPcaYNrFEeahI77Vg4Dl9Q" name="Region1">
          <transition xmi:id="_HV4RcNrHEeahI77Vg4Dl9Q" name="Initial1__StartingUp__3" source="_sJ_K0PFiEeaP3PiOkvHNkw" target="_0JLVkNrSEeaBAosuR3tfxw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKIUwPFiEeaP3PiOkvHNkw" name="Initial1__StartingUp__3__175">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Initial1__StartingUp__3&quot;,(char *)&quot;Debug__Path__Initial1__StartingUp__3&quot;,(char *)&quot;StartingUp&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_mrtE0NrHEeahI77Vg4Dl9Q" name="doorsOpen__WaitAllDoorBeClosed__2" source="_sJy9kPFiEeaP3PiOkvHNkw" target="_IcetINrHEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ98sfFiEeaP3PiOkvHNkw" name="doorsOpen__WaitAllDoorBeClosed__2__155">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;Debug__Path__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_dJOzkNrIEeahI77Vg4Dl9Q" name="WaitAllDoorBeOpened__Choice1__6" source="_sKbPsPFiEeaP3PiOkvHNkw" target="_bRbzYNrnEeal5dJZNvUqew">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPShkPFiEeaP3PiOkvHNkw" name="WaitAllDoorBeOpened__Choice1__6__237">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;Debug__Path__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_5LhOENrSEeaBAosuR3tfxw" name="StartingUp__doorsOpen__10" source="_sPxpwPFiEeaP3PiOkvHNkw" target="_7a5GINrGEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sP6zsfFiEeaP3PiOkvHNkw" name="StartingUp__doorsOpen__10__319">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::StartingUp__doorsOpen__10&quot;,(char *)&quot;Debug__Path__StartingUp__doorsOpen__10&quot;,(char *)&quot;doorsOpen&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_EgRIsNrnEeal5dJZNvUqew" name="WaitAllDoorBeClosed__AllDoorClosed__9" source="_sPpG4PFiEeaP3PiOkvHNkw" target="_9fM5sNrmEeal5dJZNvUqew">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPwboPFiEeaP3PiOkvHNkw" name="WaitAllDoorBeClosed__AllDoorClosed__9__296">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;Debug__Path__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;AllDoorClosed&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_KEVOMNrnEeal5dJZNvUqew" name="AllDoorClosed__doorsClosed__1" source="_sJk7IPFiEeaP3PiOkvHNkw" target="_BIWYMNrHEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJxvcPFiEeaP3PiOkvHNkw" name="AllDoorClosed__doorsClosed__1__132">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;Debug__Path__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;doorsClosed&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_MAD7ENrnEeal5dJZNvUqew" name="AllDoorClosed__WaitAllDoorBeClosed__8" source="_sPgkAPFiEeaP3PiOkvHNkw" target="_IcetINrHEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPof0PFiEeaP3PiOkvHNkw" name="AllDoorClosed__WaitAllDoorBeClosed__8__277">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;Debug__Path__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_ZcttcNrnEeal5dJZNvUqew" name="doorsClosed__WaitAllDoorBeOpened__4" source="_sKI70PFiEeaP3PiOkvHNkw" target="_cd7pQNrHEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKResPFiEeaP3PiOkvHNkw" name="doorsClosed__WaitAllDoorBeOpened__4__198">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;Debug__Path__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_jCt-YNrnEeal5dJZNvUqew" name="Choice1__doorsOpen__5" source="_sKSFwPFiEeaP3PiOkvHNkw" target="_7a5GINrGEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKaBkfFiEeaP3PiOkvHNkw" name="Choice1__doorsOpen__5__218">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Choice1__doorsOpen__5&quot;,(char *)&quot;Debug__Path__Choice1__doorsOpen__5&quot;,(char *)&quot;doorsOpen&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_nKsgYNrnEeal5dJZNvUqew" name="Choice1__WaitAllDoorBeOpened__7" source="_sPTvsPFiEeaP3PiOkvHNkw" target="_cd7pQNrHEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPfV4fFiEeaP3PiOkvHNkw" name="Choice1__WaitAllDoorBeOpened__7__257">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;Debug__Path__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sJliMfFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__doorsClosed__1" guard="_IUNCcNrpEeal5dJZNvUqew" source="_9fM5sNrmEeal5dJZNvUqew" target="_sJk7IPFiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_IUNCcNrpEeal5dJZNvUqew">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_IUNCcdrpEeal5dJZNvUqew">
                <language>C++</language>
                <body>    return tmpInt==locksCount;
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJliMvFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__doorsClosed__1__114">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;AllDoorClosed&quot;,(char *)&quot;Debug__Path__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sJliM_FiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__doorsClosed__1__S" guard="_sJmJQfFiEeaP3PiOkvHNkw" source="_sJk7IPFiEeaP3PiOkvHNkw" target="_sJk7I_FiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sJmJQfFiEeaP3PiOkvHNkw" name="Debug__GuardAllDoorClosed__doorsClosed__1">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sJmJQPFiEeaP3PiOkvHNkw" name="Debug__GuardAllDoorClosed__doorsClosed__1">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;AllDoorClosed&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJmJQvFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__doorsClosed__1__S__116">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__AllDoorClosed__doorsClosed__1__S&quot;,(char *)&quot;Debug__Path__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sJn-cPFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__doorsClosed__1__E" source="_sJliMPFiEeaP3PiOkvHNkw" target="_BIWYMNrHEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJolgPFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__doorsClosed__1__E__118">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__AllDoorClosed__doorsClosed__1__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;doorsClosed&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sJpMkPFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__doorsClosed__1__dbg" source="_sJk7IfFiEeaP3PiOkvHNkw" target="_sJk7IfFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJpMkvFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__doorsClosed__1__dbg__120">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__AllDoorClosed__doorsClosed__1__dbg&quot;,(char *)&quot;Debug__C__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;Debug__C__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sJpMkfFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sJzko_FiEeaP3PiOkvHNkw" name="Debug__doorsOpen__WaitAllDoorBeClosed__2" source="_7a5GINrGEeahI77Vg4Dl9Q" target="_sJy9kPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJzkpPFiEeaP3PiOkvHNkw" name="Debug__doorsOpen__WaitAllDoorBeClosed__2__134">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;doorsOpen&quot;,(char *)&quot;Debug__Path__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_ZbNNMNrJEeahI77Vg4Dl9Q" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_sJ0ywPFiEeaP3PiOkvHNkw" name="Debug__doorsOpen__WaitAllDoorBeClosed__2__S" guard="_sJ1Z0fFiEeaP3PiOkvHNkw" source="_sJy9kPFiEeaP3PiOkvHNkw" target="_sJzkofFiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sJ1Z0fFiEeaP3PiOkvHNkw" name="Debug__GuarddoorsOpen__WaitAllDoorBeClosed__2">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sJ1Z0PFiEeaP3PiOkvHNkw" name="Debug__GuarddoorsOpen__WaitAllDoorBeClosed__2">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;doorsOpen&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ1Z0vFiEeaP3PiOkvHNkw" name="Debug__doorsOpen__WaitAllDoorBeClosed__2__S__136">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__doorsOpen__WaitAllDoorBeClosed__2__S&quot;,(char *)&quot;Debug__Path__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sJ2A4PFiEeaP3PiOkvHNkw" name="Debug__doorsOpen__WaitAllDoorBeClosed__2__E" source="_sJzkovFiEeaP3PiOkvHNkw" target="_IcetINrHEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ2A4fFiEeaP3PiOkvHNkw" name="Debug__doorsOpen__WaitAllDoorBeClosed__2__E__138">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__doorsOpen__WaitAllDoorBeClosed__2__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sJ2n8PFiEeaP3PiOkvHNkw" name="Debug__doorsOpen__WaitAllDoorBeClosed__2__dbg" source="_sJy9kfFiEeaP3PiOkvHNkw" target="_sJy9kfFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ3PAfFiEeaP3PiOkvHNkw" name="Debug__doorsOpen__WaitAllDoorBeClosed__2__dbg__140">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__doorsOpen__WaitAllDoorBeClosed__2__dbg&quot;,(char *)&quot;Debug__C__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;Debug__C__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sJ3PAPFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sJ_K1fFiEeaP3PiOkvHNkw" name="Debug__Initial1__StartingUp__3" source="_sP8B0PFiEeaP3PiOkvHNkw" target="_sJ_K0PFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ_x4PFiEeaP3PiOkvHNkw" name="Debug__Initial1__StartingUp__3__157">
              <language>C++</language>
              <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;locked&quot;,&quot;twiceLock&quot;,&quot;locked&quot;,&quot;lock&quot;,&quot;Locking&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitAllDoorBeClosed&quot;,&quot;&quot;,&quot;AllDoorClosed&quot;,&quot;lockStatus&quot;,&quot;Locking&quot;);
Debug__SRO.addTransitionsFromState(&quot;unlocked&quot;,&quot;lock&quot;,&quot;locked&quot;,&quot;lock&quot;,&quot;Locking&quot;);
Debug__SRO.addTransitionsFromState(&quot;StartingUp&quot;,&quot;&quot;,&quot;doorsOpen&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;&quot;,&quot;doorsOpen&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitAllDoorBeOpened&quot;,&quot;&quot;,&quot;Choice1&quot;,&quot;lockStatus&quot;,&quot;Locking&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;&quot;,&quot;WaitAllDoorBeOpened&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;AllDoorClosed&quot;,&quot;&quot;,&quot;WaitAllDoorBeClosed&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;unlocked&quot;,&quot;twiceUnlock&quot;,&quot;unlocked&quot;,&quot;unlock&quot;,&quot;Locking&quot;);
Debug__SRO.addTransitionsFromState(&quot;AllDoorClosed&quot;,&quot;&quot;,&quot;doorsClosed&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;doorsOpen&quot;,&quot;&quot;,&quot;WaitAllDoorBeClosed&quot;,&quot;lockStatus&quot;,&quot;Locking&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;&quot;,&quot;StartingUp&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;init&quot;,&quot;unlocked&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;locked&quot;,&quot;unlock&quot;,&quot;unlocked&quot;,&quot;unlock&quot;,&quot;Locking&quot;);
Debug__SRO.addTransitionsFromState(&quot;doorsClosed&quot;,&quot;&quot;,&quot;WaitAllDoorBeOpened&quot;,&quot;lockStatus&quot;,&quot;Locking&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
            </effect>
            <trigger xmi:id="_sP8o4vFiEeaP3PiOkvHNkw" name="ConnectionEstablished" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
            </trigger>
          </transition>
          <transition xmi:id="_sJ_x4fFiEeaP3PiOkvHNkw" name="Debug__Initial1__StartingUp__3__S" guard="_sKAY8fFiEeaP3PiOkvHNkw" source="_sJ_K0PFiEeaP3PiOkvHNkw" target="_sJ_K0_FiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sKAY8fFiEeaP3PiOkvHNkw" name="Debug__GuardInitial1__StartingUp__3">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKAY8PFiEeaP3PiOkvHNkw" name="Debug__GuardInitial1__StartingUp__3">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;Initial1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKBAAPFiEeaP3PiOkvHNkw" name="Debug__Initial1__StartingUp__3__S__159">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Initial1__StartingUp__3__S&quot;,(char *)&quot;Debug__Path__Initial1__StartingUp__3&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sKCOIPFiEeaP3PiOkvHNkw" name="Debug__Initial1__StartingUp__3__E" source="_sJ_K1PFiEeaP3PiOkvHNkw" target="_0JLVkNrSEeaBAosuR3tfxw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKCOIfFiEeaP3PiOkvHNkw" name="Debug__Initial1__StartingUp__3__E__161">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Initial1__StartingUp__3__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;StartingUp&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sKDcQPFiEeaP3PiOkvHNkw" name="Debug__Initial1__StartingUp__3__dbg" source="_sJ_K0fFiEeaP3PiOkvHNkw" target="_sJ_K0fFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKDcQvFiEeaP3PiOkvHNkw" name="Debug__Initial1__StartingUp__3__dbg__163">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Initial1__StartingUp__3__dbg&quot;,(char *)&quot;Debug__C__Initial1__StartingUp__3&quot;,(char *)&quot;Debug__C__Initial1__StartingUp__3&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sKDcQfFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sKI71fFiEeaP3PiOkvHNkw" name="Debug__doorsClosed__WaitAllDoorBeOpened__4" source="_BIWYMNrHEeahI77Vg4Dl9Q" target="_sKI70PFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKI71vFiEeaP3PiOkvHNkw" name="Debug__doorsClosed__WaitAllDoorBeOpened__4__177">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;doorsClosed&quot;,(char *)&quot;Debug__Path__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_31v2gNrpEeal5dJZNvUqew" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_sKJi4PFiEeaP3PiOkvHNkw" name="Debug__doorsClosed__WaitAllDoorBeOpened__4__S" guard="_sKJi4vFiEeaP3PiOkvHNkw" source="_sKI70PFiEeaP3PiOkvHNkw" target="_sKI70_FiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sKJi4vFiEeaP3PiOkvHNkw" name="Debug__GuarddoorsClosed__WaitAllDoorBeOpened__4">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKJi4fFiEeaP3PiOkvHNkw" name="Debug__GuarddoorsClosed__WaitAllDoorBeOpened__4">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;doorsClosed&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKKJ8PFiEeaP3PiOkvHNkw" name="Debug__doorsClosed__WaitAllDoorBeOpened__4__S__179">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__doorsClosed__WaitAllDoorBeOpened__4__S&quot;,(char *)&quot;Debug__Path__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sKKJ8fFiEeaP3PiOkvHNkw" name="Debug__doorsClosed__WaitAllDoorBeOpened__4__E" source="_sKI71PFiEeaP3PiOkvHNkw" target="_cd7pQNrHEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKKJ8vFiEeaP3PiOkvHNkw" name="Debug__doorsClosed__WaitAllDoorBeOpened__4__E__181">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__doorsClosed__WaitAllDoorBeOpened__4__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sKKxAPFiEeaP3PiOkvHNkw" name="Debug__doorsClosed__WaitAllDoorBeOpened__4__dbg" source="_sKI70fFiEeaP3PiOkvHNkw" target="_sKI70fFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKLYEfFiEeaP3PiOkvHNkw" name="Debug__doorsClosed__WaitAllDoorBeOpened__4__dbg__183">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__doorsClosed__WaitAllDoorBeOpened__4__dbg&quot;,(char *)&quot;Debug__C__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;Debug__C__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sKLYEPFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sKSs0vFiEeaP3PiOkvHNkw" name="Debug__Choice1__doorsOpen__5" guard="_l54t4NrpEeal5dJZNvUqew" source="_bRbzYNrnEeal5dJZNvUqew" target="_sKSFwPFiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_l54t4NrpEeal5dJZNvUqew">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_l54t4drpEeal5dJZNvUqew">
                <language>C++</language>
                <body>    return tmpInt==locksCount;
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKSs0_FiEeaP3PiOkvHNkw" name="Debug__Choice1__doorsOpen__5__200">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Choice1__doorsOpen__5&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;Debug__Path__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sKSs1PFiEeaP3PiOkvHNkw" name="Debug__Choice1__doorsOpen__5__S" guard="_sKTT4fFiEeaP3PiOkvHNkw" source="_sKSFwPFiEeaP3PiOkvHNkw" target="_sKSs0PFiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sKTT4fFiEeaP3PiOkvHNkw" name="Debug__GuardChoice1__doorsOpen__5">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKTT4PFiEeaP3PiOkvHNkw" name="Debug__GuardChoice1__doorsOpen__5">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;Choice1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKTT4vFiEeaP3PiOkvHNkw" name="Debug__Choice1__doorsOpen__5__S__202">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Choice1__doorsOpen__5__S&quot;,(char *)&quot;Debug__Path__Choice1__doorsOpen__5&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sKT68PFiEeaP3PiOkvHNkw" name="Debug__Choice1__doorsOpen__5__E" source="_sKSs0fFiEeaP3PiOkvHNkw" target="_7a5GINrGEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKT68fFiEeaP3PiOkvHNkw" name="Debug__Choice1__doorsOpen__5__E__204">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Choice1__doorsOpen__5__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;doorsOpen&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sKT68vFiEeaP3PiOkvHNkw" name="Debug__Choice1__doorsOpen__5__dbg" source="_sKSFwfFiEeaP3PiOkvHNkw" target="_sKSFwfFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKT69PFiEeaP3PiOkvHNkw" name="Debug__Choice1__doorsOpen__5__dbg__206">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Choice1__doorsOpen__5__dbg&quot;,(char *)&quot;Debug__C__Choice1__doorsOpen__5&quot;,(char *)&quot;Debug__C__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sKT68_FiEeaP3PiOkvHNkw" name="Debug__MSG" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sKbPtfFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeOpened__Choice1__6" source="_cd7pQNrHEeahI77Vg4Dl9Q" target="_sKbPsPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKb2wPFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeOpened__Choice1__6__220">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;WaitAllDoorBeOpened&quot;,(char *)&quot;Debug__Path__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_v44UINrJEeahI77Vg4Dl9Q" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_sKcd0PFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeOpened__Choice1__6__S" guard="_sKcd0vFiEeaP3PiOkvHNkw" source="_sKbPsPFiEeaP3PiOkvHNkw" target="_sKbPs_FiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sKcd0vFiEeaP3PiOkvHNkw" name="Debug__GuardWaitAllDoorBeOpened__Choice1__6">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sKcd0fFiEeaP3PiOkvHNkw" name="Debug__GuardWaitAllDoorBeOpened__Choice1__6">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKcd0_FiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeOpened__Choice1__6__S__222">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__WaitAllDoorBeOpened__Choice1__6__S&quot;,(char *)&quot;Debug__Path__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sKdE4PFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeOpened__Choice1__6__E" source="_sKbPtPFiEeaP3PiOkvHNkw" target="_bRbzYNrnEeal5dJZNvUqew">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKdE4fFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeOpened__Choice1__6__E__224">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__WaitAllDoorBeOpened__Choice1__6__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sKdr8PFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeOpened__Choice1__6__dbg" source="_sKbPsfFiEeaP3PiOkvHNkw" target="_sKbPsfFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKdr8vFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeOpened__Choice1__6__dbg__226">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__WaitAllDoorBeOpened__Choice1__6__dbg&quot;,(char *)&quot;Debug__C__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;Debug__C__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sKdr8fFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sPUWxPFiEeaP3PiOkvHNkw" name="Debug__Choice1__WaitAllDoorBeOpened__7" source="_bRbzYNrnEeal5dJZNvUqew" target="_sPTvsPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPUWxfFiEeaP3PiOkvHNkw" name="Debug__Choice1__WaitAllDoorBeOpened__7__239">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;Choice1&quot;,(char *)&quot;Debug__Path__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sPVk4PFiEeaP3PiOkvHNkw" name="Debug__Choice1__WaitAllDoorBeOpened__7__S" guard="_sPVk4vFiEeaP3PiOkvHNkw" source="_sPTvsPFiEeaP3PiOkvHNkw" target="_sPUWwvFiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sPVk4vFiEeaP3PiOkvHNkw" name="Debug__GuardChoice1__WaitAllDoorBeOpened__7">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sPVk4fFiEeaP3PiOkvHNkw" name="Debug__GuardChoice1__WaitAllDoorBeOpened__7">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;Choice1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPWL8PFiEeaP3PiOkvHNkw" name="Debug__Choice1__WaitAllDoorBeOpened__7__S__241">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Choice1__WaitAllDoorBeOpened__7__S&quot;,(char *)&quot;Debug__Path__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sPWzAPFiEeaP3PiOkvHNkw" name="Debug__Choice1__WaitAllDoorBeOpened__7__E" source="_sPUWw_FiEeaP3PiOkvHNkw" target="_cd7pQNrHEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPWzAfFiEeaP3PiOkvHNkw" name="Debug__Choice1__WaitAllDoorBeOpened__7__E__243">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Choice1__WaitAllDoorBeOpened__7__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sPXaEPFiEeaP3PiOkvHNkw" name="Debug__Choice1__WaitAllDoorBeOpened__7__dbg" source="_sPUWwPFiEeaP3PiOkvHNkw" target="_sPUWwPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPYBIPFiEeaP3PiOkvHNkw" name="Debug__Choice1__WaitAllDoorBeOpened__7__dbg__245">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__Choice1__WaitAllDoorBeOpened__7__dbg&quot;,(char *)&quot;Debug__C__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;Debug__C__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sPXaEfFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sPgkBfFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__WaitAllDoorBeClosed__8" source="_9fM5sNrmEeal5dJZNvUqew" target="_sPgkAPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPhLEPFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__WaitAllDoorBeClosed__8__259">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;AllDoorClosed&quot;,(char *)&quot;Debug__Path__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sPhLEfFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__WaitAllDoorBeClosed__8__S" guard="_sPhLE_FiEeaP3PiOkvHNkw" source="_sPgkAPFiEeaP3PiOkvHNkw" target="_sPgkA_FiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sPhLE_FiEeaP3PiOkvHNkw" name="Debug__GuardAllDoorClosed__WaitAllDoorBeClosed__8">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sPhLEvFiEeaP3PiOkvHNkw" name="Debug__GuardAllDoorClosed__WaitAllDoorBeClosed__8">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;AllDoorClosed&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPhyIPFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__WaitAllDoorBeClosed__8__S__261">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__AllDoorClosed__WaitAllDoorBeClosed__8__S&quot;,(char *)&quot;Debug__Path__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sPhyIfFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__WaitAllDoorBeClosed__8__E" source="_sPgkBPFiEeaP3PiOkvHNkw" target="_IcetINrHEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPiZMPFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__WaitAllDoorBeClosed__8__E__263">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__AllDoorClosed__WaitAllDoorBeClosed__8__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sPiZMfFiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__WaitAllDoorBeClosed__8__dbg" source="_sPgkAfFiEeaP3PiOkvHNkw" target="_sPgkAfFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPiZM_FiEeaP3PiOkvHNkw" name="Debug__AllDoorClosed__WaitAllDoorBeClosed__8__dbg__265">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__AllDoorClosed__WaitAllDoorBeClosed__8__dbg&quot;,(char *)&quot;Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sPiZMvFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sPpt8vFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeClosed__AllDoorClosed__9" source="_IcetINrHEeahI77Vg4Dl9Q" target="_sPpG4PFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPpt8_FiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeClosed__AllDoorClosed__9__279">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;WaitAllDoorBeClosed&quot;,(char *)&quot;Debug__Path__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_8nPPkNrpEeal5dJZNvUqew" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_sPqVAPFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeClosed__AllDoorClosed__9__S" guard="_sPqVAvFiEeaP3PiOkvHNkw" source="_sPpG4PFiEeaP3PiOkvHNkw" target="_sPpt8PFiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sPqVAvFiEeaP3PiOkvHNkw" name="Debug__GuardWaitAllDoorBeClosed__AllDoorClosed__9">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sPqVAfFiEeaP3PiOkvHNkw" name="Debug__GuardWaitAllDoorBeClosed__AllDoorClosed__9">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPq8EPFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeClosed__AllDoorClosed__9__S__281">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__WaitAllDoorBeClosed__AllDoorClosed__9__S&quot;,(char *)&quot;Debug__Path__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sPq8EfFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeClosed__AllDoorClosed__9__E" source="_sPpt8fFiEeaP3PiOkvHNkw" target="_9fM5sNrmEeal5dJZNvUqew">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPq8EvFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeClosed__AllDoorClosed__9__E__283">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__WaitAllDoorBeClosed__AllDoorClosed__9__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;AllDoorClosed&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sPrjIPFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeClosed__AllDoorClosed__9__dbg" source="_sPpG4fFiEeaP3PiOkvHNkw" target="_sPpG4fFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPrjIvFiEeaP3PiOkvHNkw" name="Debug__WaitAllDoorBeClosed__AllDoorClosed__9__dbg__285">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__WaitAllDoorBeClosed__AllDoorClosed__9__dbg&quot;,(char *)&quot;Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sPrjIfFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sPyQ0PFiEeaP3PiOkvHNkw" name="Debug__StartingUp__doorsOpen__10" source="_0JLVkNrSEeaBAosuR3tfxw" target="_sPxpwPFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPyQ0fFiEeaP3PiOkvHNkw" name="Debug__StartingUp__doorsOpen__10__298">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__StartingUp__doorsOpen__10&quot;,(char *)&quot;StartingUp&quot;,(char *)&quot;Debug__Path__StartingUp__doorsOpen__10&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_HlMpYNrTEeaBAosuR3tfxw" port="_Cey60NrUEeaBAosuR3tfxw">
              <event xmi:type="uml:CallEvent" href="pathmap://UMLRTRTSLIB/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_sPyQ0vFiEeaP3PiOkvHNkw" name="Debug__StartingUp__doorsOpen__10__S" guard="_sPy34fFiEeaP3PiOkvHNkw" source="_sPxpwPFiEeaP3PiOkvHNkw" target="_sPxpw_FiEeaP3PiOkvHNkw">
            <ownedRule xmi:id="_sPy34fFiEeaP3PiOkvHNkw" name="Debug__GuardStartingUp__doorsOpen__10">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sPy34PFiEeaP3PiOkvHNkw" name="Debug__GuardStartingUp__doorsOpen__10">
                <language>C++</language>
                <body>return Debug__SRO.checkDebug(&quot;StartingUp&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPy34vFiEeaP3PiOkvHNkw" name="Debug__StartingUp__doorsOpen__10__S__300">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__StartingUp__doorsOpen__10__S&quot;,(char *)&quot;Debug__Path__StartingUp__doorsOpen__10&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sPze8PFiEeaP3PiOkvHNkw" name="Debug__StartingUp__doorsOpen__10__E" source="_sPxpxPFiEeaP3PiOkvHNkw" target="_7a5GINrGEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPze8fFiEeaP3PiOkvHNkw" name="Debug__StartingUp__doorsOpen__10__E__302">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__StartingUp__doorsOpen__10__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;doorsOpen&quot;,(char *)&quot;&quot;);

</body>
            </effect>
          </transition>
          <transition xmi:id="_sPze8vFiEeaP3PiOkvHNkw" name="Debug__StartingUp__doorsOpen__10__dbg" source="_sPxpwfFiEeaP3PiOkvHNkw" target="_sPxpwfFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sP0GAfFiEeaP3PiOkvHNkw" name="Debug__StartingUp__doorsOpen__10__dbg__304">
              <language>C++</language>
              <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__StartingUp__doorsOpen__10__dbg&quot;,(char *)&quot;Debug__C__StartingUp__doorsOpen__10&quot;,(char *)&quot;Debug__C__StartingUp__doorsOpen__10&quot;,(char *)&quot;&quot;);

</body>
            </effect>
            <trigger xmi:id="_sP0GAPFiEeaP3PiOkvHNkw" name="Debug__MSG" port="_rwdQgPFiEeaP3PiOkvHNkw">
              <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
            </trigger>
          </transition>
          <transition xmi:id="_sP8o4PFiEeaP3PiOkvHNkw" name="Debug__InitDebug" source="_64F7ENrGEeahI77Vg4Dl9Q" target="_sP8B0PFiEeaP3PiOkvHNkw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sP8o4fFiEeaP3PiOkvHNkw" name="DebugCheck">
              <language>C++</language>
              <body>std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
std::string tempS;
std::cout&lt;&lt;&quot;Enter 1 for running in debug mode, any other key for normal model\n&quot;;
std::cin>> tempS;
if (tempS==&quot;1&quot;)
    this->Debug__SRO.setExecMode(Stepping);
else
    this->Debug__SRO.setExecMode(Running);
</body>
            </effect>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_64F7ENrGEeahI77Vg4Dl9Q" name="Initial1"/>
          <subvertex xmi:type="uml:State" xmi:id="_7a5GINrGEeahI77Vg4Dl9Q" name="doorsOpen">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_2oNS4NrJEeahI77Vg4Dl9Q" name="getLockCommand">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;doorsOpen&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::doorsOpen&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;Doors are open&quot;&lt;&lt;std::endl;
    std::cout&lt;&lt;&quot;Press any key to close doors&quot;&lt;&lt;std::endl;
    getchar();
    std::cout&lt;&lt;&quot;Sending Lock message to doors\n&quot;&lt;&lt;std::endl;
    /// send message to first door
    lockPort.lock().send(4);
    tmpInt=1;
}</body>
            </entry>
            <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sQATQPFiEeaP3PiOkvHNkw" name="doorsOpen__320">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;doorsOpen&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::doorsOpen&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

}</body>
            </exit>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_BIWYMNrHEeahI77Vg4Dl9Q" name="doorsClosed">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_XyQE0NrpEeal5dJZNvUqew">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;doorsClosed&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::doorsClosed&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;Doors are closed&quot;&lt;&lt;std::endl;
    std::cout&lt;&lt;&quot;Press any key to open doors&quot;&lt;&lt;std::endl;
    getchar();
    std::cout&lt;&lt;&quot;Sending UnLock message to doors\n&quot;&lt;&lt;std::endl;
    /// send message to first door
    lockPort.unlock().send(4);
    tmpInt=1;
}</body>
            </entry>
            <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sQEksPFiEeaP3PiOkvHNkw" name="doorsClosed__324">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;doorsClosed&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::doorsClosed&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

}</body>
            </exit>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_IcetINrHEeahI77Vg4Dl9Q" name="WaitAllDoorBeClosed">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_VddNINroEeal5dJZNvUqew">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

    tmpInt++;
}</body>
            </entry>
            <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sQBhYPFiEeaP3PiOkvHNkw" name="WaitAllDoorBeClosed__321">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

}</body>
            </exit>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_cd7pQNrHEeahI77Vg4Dl9Q" name="WaitAllDoorBeOpened">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_gW1VANrpEeal5dJZNvUqew">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

    tmpInt++;
}</body>
            </entry>
            <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sQCvgPFiEeaP3PiOkvHNkw" name="WaitAllDoorBeOpened__322">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

}</body>
            </exit>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_0JLVkNrSEeaBAosuR3tfxw" name="StartingUp">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_LssqQNrTEeaBAosuR3tfxw" name="startup">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;StartingUp&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::StartingUp&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

    startupTimer.informIn(UMLRTTimespec(3,0));
}</body>
            </entry>
            <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sQDWkPFiEeaP3PiOkvHNkw" name="StartingUp__323">
              <language>C++</language>
              <body>if( not Debug__SRO.checkDebug(&quot;StartingUp&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::StartingUp&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

}</body>
            </exit>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_9fM5sNrmEeal5dJZNvUqew" name="AllDoorClosed" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_bRbzYNrnEeal5dJZNvUqew" name="Choice1" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sJk7IPFiEeaP3PiOkvHNkw" name="Debug__Path__AllDoorClosed__doorsClosed__1" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sJk7IfFiEeaP3PiOkvHNkw" name="Debug__C__AllDoorClosed__doorsClosed__1">
            <connectionPoint xmi:id="_sJk7I_FiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sJliMPFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sJk7IvFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sJrBwvFiEeaP3PiOkvHNkw" name="Debug__init__trans__AllDoorClosed__doorsClosed__1" source="_sJk7I_FiEeaP3PiOkvHNkw" target="_sJqasPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJuFEfFiEeaP3PiOkvHNkw" name="Debug__init__trans__AllDoorClosed__doorsClosed__1__125">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__doorsClosed__1::Region1::Debug__init__trans__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sJrBw_FiEeaP3PiOkvHNkw" name="Debug__Ac__AllDoorClosed__doorsClosed__1" source="_sJqasPFiEeaP3PiOkvHNkw" target="_sJqasvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJusIPFiEeaP3PiOkvHNkw" name="Debug__Ac__AllDoorClosed__doorsClosed__1__127">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__doorsClosed__1::Region1::Debug__Ac__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;Debug__B__Ac__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;Debug__A__Ac__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sJrBxPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sJrBxfFiEeaP3PiOkvHNkw" name="Debug__En__doorsClosed" source="_sJqasvFiEeaP3PiOkvHNkw" target="_sJrBwPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJro0fFiEeaP3PiOkvHNkw" visibility="public" isReentrant="true">
                  <name xsi:nil="true"/>
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__doorsClosed__1::Region1::Debug__En__doorsClosed&quot;,(char *)&quot;Debug__A__Ac__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;Debug__A__En__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;Doors are closed&quot;&lt;&lt;std::endl;
    std::cout&lt;&lt;&quot;Press any key to open doors&quot;&lt;&lt;std::endl;
    getchar();
    std::cout&lt;&lt;&quot;Sending UnLock message to doors\n&quot;&lt;&lt;std::endl;
    /// send message to first door
    lockPort.unlock().send(4);
    tmpInt=1;
</body>
                </effect>
                <trigger xmi:id="_sJro0PFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sJro0vFiEeaP3PiOkvHNkw" name="Debug__end__trans__AllDoorClosed__doorsClosed__1" source="_sJrBwPFiEeaP3PiOkvHNkw" target="_sJliMPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJv6QPFiEeaP3PiOkvHNkw" name="Debug__end__trans__AllDoorClosed__doorsClosed__1__130">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__doorsClosed__1::Region1::Debug__end__trans__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;Debug__A__En__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sJro0_FiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sJqasPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__AllDoorClosed__doorsClosed__1">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sJqasfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__AllDoorClosed__doorsClosed__1">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__doorsClosed__1::Region1::Debug__B__Ac__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;AllDoorClosed__doorsClosed__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sJro1PFiEeaP3PiOkvHNkw" name="Debug__B__Ac__AllDoorClosed__doorsClosed__1__121">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__doorsClosed__1::Region1::Debug__B__Ac__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sJqasvFiEeaP3PiOkvHNkw" name="Debug__A__Ac__AllDoorClosed__doorsClosed__1">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sJqas_FiEeaP3PiOkvHNkw" name="Debug__A__Ac__AllDoorClosed__doorsClosed__1">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__doorsClosed__1::Region1::Debug__A__Ac__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;AllDoorClosed__doorsClosed__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;doorsClosed&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sJs28PFiEeaP3PiOkvHNkw" name="Debug__A__Ac__AllDoorClosed__doorsClosed__1__122">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__doorsClosed__1::Region1::Debug__A__Ac__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sJrBwPFiEeaP3PiOkvHNkw" name="Debug__A__En__AllDoorClosed__doorsClosed__1">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sJrBwfFiEeaP3PiOkvHNkw" name="Debug__A__En__AllDoorClosed__doorsClosed__1">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__doorsClosed__1::Region1::Debug__A__En__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;doorsClosed&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sJuFEPFiEeaP3PiOkvHNkw" name="Debug__A__En__AllDoorClosed__doorsClosed__1__123">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__doorsClosed__1::Region1::Debug__A__En__AllDoorClosed__doorsClosed__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sJy9kPFiEeaP3PiOkvHNkw" name="Debug__Path__doorsOpen__WaitAllDoorBeClosed__2" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sJy9kfFiEeaP3PiOkvHNkw" name="Debug__C__doorsOpen__WaitAllDoorBeClosed__2">
            <connectionPoint xmi:id="_sJzkofFiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sJzkovFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sJzkoPFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sJ5rQvFiEeaP3PiOkvHNkw" name="Debug__init__trans__doorsOpen__WaitAllDoorBeClosed__2" source="_sJzkofFiEeaP3PiOkvHNkw" target="_sJ32EPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ8ukPFiEeaP3PiOkvHNkw" name="Debug__init__trans__doorsOpen__WaitAllDoorBeClosed__2__146">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__init__trans__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__doorsOpen&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sJ5rQ_FiEeaP3PiOkvHNkw" name="Debug__Ex__doorsOpen" source="_sJ32EPFiEeaP3PiOkvHNkw" target="_sJ4dIPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ8ukfFiEeaP3PiOkvHNkw" name="Debug__Ex__doorsOpen__148">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__Ex__doorsOpen&quot;,(char *)&quot;Debug__B__Ex__doorsOpen&quot;,(char *)&quot;Debug__B__Ac__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sJ5rRPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sJ5rRfFiEeaP3PiOkvHNkw" name="Debug__AC__doorsOpen__WaitAllDoorBeClosed__2" source="_sJ4dIPFiEeaP3PiOkvHNkw" target="_sJ5EMPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ9VoPFiEeaP3PiOkvHNkw" name="Debug__AC__doorsOpen__WaitAllDoorBeClosed__2__150">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__AC__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;Debug__B__Ac__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;Debug__A__Ac__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sJ5rRvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sJ5rR_FiEeaP3PiOkvHNkw" name="Debug__En__WaitAllDoorBeClosed" source="_sJ5EMPFiEeaP3PiOkvHNkw" target="_sJ5rQPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ6SUPFiEeaP3PiOkvHNkw" visibility="public" isReentrant="true">
                  <name xsi:nil="true"/>
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__En__WaitAllDoorBeClosed&quot;,(char *)&quot;Debug__A__Ac__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;Debug__A__En__WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;);

    tmpInt++;
</body>
                </effect>
                <trigger xmi:id="_sJ5rSPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sJ6SUfFiEeaP3PiOkvHNkw" name="Debug__end__trans__doorsOpen__WaitAllDoorBeClosed__2" source="_sJ5rQPFiEeaP3PiOkvHNkw" target="_sJzkovFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ98sPFiEeaP3PiOkvHNkw" name="Debug__end__trans__doorsOpen__WaitAllDoorBeClosed__2__153">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__end__trans__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;Debug__A__En__WaitAllDoorBeClosed&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sJ6SUvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sJ32EPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__doorsOpen">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sJ32EfFiEeaP3PiOkvHNkw" name="Debug__B__Ex__doorsOpen">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__B__Ex__doorsOpen&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;doorsOpen&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sJ6SU_FiEeaP3PiOkvHNkw" name="Debug__B__Ex__doorsOpen__141">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__B__Ex__doorsOpen&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sJ4dIPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__doorsOpen__WaitAllDoorBeClosed__2">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sJ4dIfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__doorsOpen__WaitAllDoorBeClosed__2">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__B__Ac__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;doorsOpen&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;doorsOpen__WaitAllDoorBeClosed__2&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sJ65YPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__doorsOpen__WaitAllDoorBeClosed__2__142">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__B__Ac__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sJ5EMPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__doorsOpen__WaitAllDoorBeClosed__2">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sJ5EMfFiEeaP3PiOkvHNkw" name="Debug__A__Ac__doorsOpen__WaitAllDoorBeClosed__2">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__A__Ac__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;doorsOpen__WaitAllDoorBeClosed__2&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sJ7gcPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__doorsOpen__WaitAllDoorBeClosed__2__143">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__A__Ac__doorsOpen__WaitAllDoorBeClosed__2&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sJ5rQPFiEeaP3PiOkvHNkw" name="Debug__A__En__WaitAllDoorBeClosed">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sJ5rQfFiEeaP3PiOkvHNkw" name="Debug__A__En__WaitAllDoorBeClosed">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__A__En__WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sJ8HgPFiEeaP3PiOkvHNkw" name="Debug__A__En__WaitAllDoorBeClosed__144">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsOpen__WaitAllDoorBeClosed__2::Region1::Debug__A__En__WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sJ_K0PFiEeaP3PiOkvHNkw" name="Debug__Path__Initial1__StartingUp__3" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sJ_K0fFiEeaP3PiOkvHNkw" name="Debug__C__Initial1__StartingUp__3">
            <connectionPoint xmi:id="_sJ_K0_FiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sJ_K1PFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sJ_K0vFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sKEqYvFiEeaP3PiOkvHNkw" name="Debug__init__trans__Initial1__StartingUp__3" source="_sJ_K0_FiEeaP3PiOkvHNkw" target="_sKEDUPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKGfkfFiEeaP3PiOkvHNkw" name="Debug__init__trans__Initial1__StartingUp__3__168">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Initial1__StartingUp__3::Region1::Debug__init__trans__Initial1__StartingUp__3&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Initial1__StartingUp__3&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sKEqY_FiEeaP3PiOkvHNkw" name="Debug__Ac__Initial1__StartingUp__3" source="_sKEDUPFiEeaP3PiOkvHNkw" target="_sKEDUvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKHGoPFiEeaP3PiOkvHNkw" name="Debug__Ac__Initial1__StartingUp__3__170">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Initial1__StartingUp__3::Region1::Debug__Ac__Initial1__StartingUp__3&quot;,(char *)&quot;Debug__B__Ac__Initial1__StartingUp__3&quot;,(char *)&quot;Debug__A__Ac__Initial1__StartingUp__3&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sKEqZPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sKEqZfFiEeaP3PiOkvHNkw" name="Debug__En__StartingUp" source="_sKEDUvFiEeaP3PiOkvHNkw" target="_sKEqYPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKFRcfFiEeaP3PiOkvHNkw" name="startup" visibility="public" isReentrant="true">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Initial1__StartingUp__3::Region1::Debug__En__StartingUp&quot;,(char *)&quot;Debug__A__Ac__Initial1__StartingUp__3&quot;,(char *)&quot;Debug__A__En__Initial1__StartingUp__3&quot;,(char *)&quot;&quot;);

    startupTimer.informIn(UMLRTTimespec(3,0));
</body>
                </effect>
                <trigger xmi:id="_sKFRcPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sKFRcvFiEeaP3PiOkvHNkw" name="Debug__end__trans__Initial1__StartingUp__3" source="_sKEqYPFiEeaP3PiOkvHNkw" target="_sJ_K1PFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKHtsPFiEeaP3PiOkvHNkw" name="Debug__end__trans__Initial1__StartingUp__3__173">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Initial1__StartingUp__3::Region1::Debug__end__trans__Initial1__StartingUp__3&quot;,(char *)&quot;Debug__A__En__Initial1__StartingUp__3&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sKFRc_FiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sKEDUPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__Initial1__StartingUp__3">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKEDUfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__Initial1__StartingUp__3">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Initial1__StartingUp__3::Region1::Debug__B__Ac__Initial1__StartingUp__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;Initial1__StartingUp__3&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKFRdPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__Initial1__StartingUp__3__164">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Initial1__StartingUp__3::Region1::Debug__B__Ac__Initial1__StartingUp__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sKEDUvFiEeaP3PiOkvHNkw" name="Debug__A__Ac__Initial1__StartingUp__3">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKEDU_FiEeaP3PiOkvHNkw" name="Debug__A__Ac__Initial1__StartingUp__3">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Initial1__StartingUp__3::Region1::Debug__A__Ac__Initial1__StartingUp__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;Initial1__StartingUp__3&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;StartingUp&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKF4gPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__Initial1__StartingUp__3__165">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Initial1__StartingUp__3::Region1::Debug__A__Ac__Initial1__StartingUp__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sKEqYPFiEeaP3PiOkvHNkw" name="Debug__A__En__Initial1__StartingUp__3">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKEqYfFiEeaP3PiOkvHNkw" name="Debug__A__En__Initial1__StartingUp__3">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Initial1__StartingUp__3::Region1::Debug__A__En__Initial1__StartingUp__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;StartingUp&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKGfkPFiEeaP3PiOkvHNkw" name="Debug__A__En__Initial1__StartingUp__3__166">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Initial1__StartingUp__3::Region1::Debug__A__En__Initial1__StartingUp__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sKI70PFiEeaP3PiOkvHNkw" name="Debug__Path__doorsClosed__WaitAllDoorBeOpened__4" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sKI70fFiEeaP3PiOkvHNkw" name="Debug__C__doorsClosed__WaitAllDoorBeOpened__4">
            <connectionPoint xmi:id="_sKI70_FiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sKI71PFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sKI70vFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sKMmMvFiEeaP3PiOkvHNkw" name="Debug__init__trans__doorsClosed__WaitAllDoorBeOpened__4" source="_sKI70_FiEeaP3PiOkvHNkw" target="_sKLYEvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKPpgPFiEeaP3PiOkvHNkw" name="Debug__init__trans__doorsClosed__WaitAllDoorBeOpened__4__189">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__init__trans__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__doorsClosed&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sKMmM_FiEeaP3PiOkvHNkw" name="Debug__Ex__doorsClosed" source="_sKLYEvFiEeaP3PiOkvHNkw" target="_sKL_IfFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKPpgfFiEeaP3PiOkvHNkw" name="Debug__Ex__doorsClosed__191">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__Ex__doorsClosed&quot;,(char *)&quot;Debug__B__Ex__doorsClosed&quot;,(char *)&quot;Debug__B__Ac__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sKMmNPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sKNNQPFiEeaP3PiOkvHNkw" name="Debug__AC__doorsClosed__WaitAllDoorBeOpened__4" source="_sKL_IfFiEeaP3PiOkvHNkw" target="_sKL_I_FiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKQQkPFiEeaP3PiOkvHNkw" name="Debug__AC__doorsClosed__WaitAllDoorBeOpened__4__193">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__AC__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;Debug__B__Ac__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;Debug__A__Ac__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sKNNQfFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sKNNQvFiEeaP3PiOkvHNkw" name="Debug__En__WaitAllDoorBeOpened" source="_sKL_I_FiEeaP3PiOkvHNkw" target="_sKMmMPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKNNRPFiEeaP3PiOkvHNkw" visibility="public" isReentrant="true">
                  <name xsi:nil="true"/>
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__En__WaitAllDoorBeOpened&quot;,(char *)&quot;Debug__A__Ac__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;Debug__A__En__WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;);

    tmpInt++;
</body>
                </effect>
                <trigger xmi:id="_sKNNQ_FiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sKNNRfFiEeaP3PiOkvHNkw" name="Debug__end__trans__doorsClosed__WaitAllDoorBeOpened__4" source="_sKMmMPFiEeaP3PiOkvHNkw" target="_sKI71PFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKQ3oPFiEeaP3PiOkvHNkw" name="Debug__end__trans__doorsClosed__WaitAllDoorBeOpened__4__196">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__end__trans__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;Debug__A__En__WaitAllDoorBeOpened&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sKNNRvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sKLYEvFiEeaP3PiOkvHNkw" name="Debug__B__Ex__doorsClosed">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKL_IPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__doorsClosed">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__B__Ex__doorsClosed&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;doorsClosed&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKNNR_FiEeaP3PiOkvHNkw" name="Debug__B__Ex__doorsClosed__184">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__B__Ex__doorsClosed&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sKL_IfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__doorsClosed__WaitAllDoorBeOpened__4">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKL_IvFiEeaP3PiOkvHNkw" name="Debug__B__Ac__doorsClosed__WaitAllDoorBeOpened__4">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__B__Ac__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;doorsClosed&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;doorsClosed__WaitAllDoorBeOpened__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKN0UPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__doorsClosed__WaitAllDoorBeOpened__4__185">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__B__Ac__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sKL_I_FiEeaP3PiOkvHNkw" name="Debug__A__Ac__doorsClosed__WaitAllDoorBeOpened__4">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKL_JPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__doorsClosed__WaitAllDoorBeOpened__4">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__A__Ac__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;doorsClosed__WaitAllDoorBeOpened__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKObYPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__doorsClosed__WaitAllDoorBeOpened__4__186">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__A__Ac__doorsClosed__WaitAllDoorBeOpened__4&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sKMmMPFiEeaP3PiOkvHNkw" name="Debug__A__En__WaitAllDoorBeOpened">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKMmMfFiEeaP3PiOkvHNkw" name="Debug__A__En__WaitAllDoorBeOpened">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__A__En__WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKPCcPFiEeaP3PiOkvHNkw" name="Debug__A__En__WaitAllDoorBeOpened__187">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__doorsClosed__WaitAllDoorBeOpened__4::Region1::Debug__A__En__WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sKSFwPFiEeaP3PiOkvHNkw" name="Debug__Path__Choice1__doorsOpen__5" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sKSFwfFiEeaP3PiOkvHNkw" name="Debug__C__Choice1__doorsOpen__5">
            <connectionPoint xmi:id="_sKSs0PFiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sKSs0fFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sKSFwvFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sKWXMPFiEeaP3PiOkvHNkw" name="Debug__init__trans__Choice1__doorsOpen__5" source="_sKSs0PFiEeaP3PiOkvHNkw" target="_sKUiAPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKYzcPFiEeaP3PiOkvHNkw" name="Debug__init__trans__Choice1__doorsOpen__5__211">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__doorsOpen__5::Region1::Debug__init__trans__Choice1__doorsOpen__5&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sKWXMfFiEeaP3PiOkvHNkw" name="Debug__Ac__Choice1__doorsOpen__5" source="_sKUiAPFiEeaP3PiOkvHNkw" target="_sKVJEPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKYzcfFiEeaP3PiOkvHNkw" name="Debug__Ac__Choice1__doorsOpen__5__213">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__doorsOpen__5::Region1::Debug__Ac__Choice1__doorsOpen__5&quot;,(char *)&quot;Debug__B__Ac__Choice1__doorsOpen__5&quot;,(char *)&quot;Debug__A__Ac__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sKWXMvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sKWXM_FiEeaP3PiOkvHNkw" name="Debug__En__doorsOpen" source="_sKVJEPFiEeaP3PiOkvHNkw" target="_sKVwIPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKWXNfFiEeaP3PiOkvHNkw" name="getLockCommand" visibility="public" isReentrant="true">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__doorsOpen__5::Region1::Debug__En__doorsOpen&quot;,(char *)&quot;Debug__A__Ac__Choice1__doorsOpen__5&quot;,(char *)&quot;Debug__A__En__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;Doors are open&quot;&lt;&lt;std::endl;
    std::cout&lt;&lt;&quot;Press any key to close doors&quot;&lt;&lt;std::endl;
    getchar();
    std::cout&lt;&lt;&quot;Sending Lock message to doors\n&quot;&lt;&lt;std::endl;
    /// send message to first door
    lockPort.lock().send(4);
    tmpInt=1;
</body>
                </effect>
                <trigger xmi:id="_sKWXNPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sKWXNvFiEeaP3PiOkvHNkw" name="Debug__end__trans__Choice1__doorsOpen__5" source="_sKVwIPFiEeaP3PiOkvHNkw" target="_sKSs0fFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKaBkPFiEeaP3PiOkvHNkw" name="Debug__end__trans__Choice1__doorsOpen__5__216">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__doorsOpen__5::Region1::Debug__end__trans__Choice1__doorsOpen__5&quot;,(char *)&quot;Debug__A__En__Choice1__doorsOpen__5&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sKWXN_FiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sKUiAPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__Choice1__doorsOpen__5">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKUiAfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__Choice1__doorsOpen__5">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__doorsOpen__5::Region1::Debug__B__Ac__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;Choice1__doorsOpen__5&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKW-QPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__Choice1__doorsOpen__5__207">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__doorsOpen__5::Region1::Debug__B__Ac__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sKVJEPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__Choice1__doorsOpen__5">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKVJEfFiEeaP3PiOkvHNkw" name="Debug__A__Ac__Choice1__doorsOpen__5">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__doorsOpen__5::Region1::Debug__A__Ac__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;Choice1__doorsOpen__5&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;doorsOpen&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKXlUPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__Choice1__doorsOpen__5__208">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__doorsOpen__5::Region1::Debug__A__Ac__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sKVwIPFiEeaP3PiOkvHNkw" name="Debug__A__En__Choice1__doorsOpen__5">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKVwIfFiEeaP3PiOkvHNkw" name="Debug__A__En__Choice1__doorsOpen__5">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__doorsOpen__5::Region1::Debug__A__En__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;doorsOpen&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKXlUfFiEeaP3PiOkvHNkw" name="Debug__A__En__Choice1__doorsOpen__5__209">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__doorsOpen__5::Region1::Debug__A__En__Choice1__doorsOpen__5&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sKbPsPFiEeaP3PiOkvHNkw" name="Debug__Path__WaitAllDoorBeOpened__Choice1__6" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sKbPsfFiEeaP3PiOkvHNkw" name="Debug__C__WaitAllDoorBeOpened__Choice1__6">
            <connectionPoint xmi:id="_sKbPs_FiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sKbPtPFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sKbPsvFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sKfhIPFiEeaP3PiOkvHNkw" name="Debug__init__trans__WaitAllDoorBeOpened__Choice1__6" source="_sKbPs_FiEeaP3PiOkvHNkw" target="_sKeTAPFiEeaP3PiOkvHNkw"/>
              <transition xmi:id="_sKfhIfFiEeaP3PiOkvHNkw" name="Debug__Ex__WaitAllDoorBeOpened" source="_sKeTAPFiEeaP3PiOkvHNkw" target="_sKeTAvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKhWUPFiEeaP3PiOkvHNkw" name="Debug__Ex__WaitAllDoorBeOpened__231">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeOpened__Choice1__6::Region1::Debug__Ex__WaitAllDoorBeOpened&quot;,(char *)&quot;Debug__B__Ex__WaitAllDoorBeOpened&quot;,(char *)&quot;Debug__B__Ac__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sKfhIvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sKfhI_FiEeaP3PiOkvHNkw" name="Debug__AC__WaitAllDoorBeOpened__Choice1__6" source="_sKeTAvFiEeaP3PiOkvHNkw" target="_sKe6EPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKh9YPFiEeaP3PiOkvHNkw" name="Debug__AC__WaitAllDoorBeOpened__Choice1__6__233">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeOpened__Choice1__6::Region1::Debug__AC__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;Debug__B__Ac__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;Debug__A__Ac__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sKfhJPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sKfhJfFiEeaP3PiOkvHNkw" name="Debug__end__trans__WaitAllDoorBeOpened__Choice1__6" source="_sKe6EPFiEeaP3PiOkvHNkw" target="_sKbPtPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sKikcPFiEeaP3PiOkvHNkw" name="Debug__end__trans__WaitAllDoorBeOpened__Choice1__6__235">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeOpened__Choice1__6::Region1::Debug__end__trans__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;Debug__A__Ac__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sKfhJvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sKeTAPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__WaitAllDoorBeOpened">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKeTAfFiEeaP3PiOkvHNkw" name="Debug__B__Ex__WaitAllDoorBeOpened">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeOpened__Choice1__6::Region1::Debug__B__Ex__WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKgIMPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__WaitAllDoorBeOpened__227">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeOpened__Choice1__6::Region1::Debug__B__Ex__WaitAllDoorBeOpened&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sKeTAvFiEeaP3PiOkvHNkw" name="Debug__B__Ac__WaitAllDoorBeOpened__Choice1__6">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKeTA_FiEeaP3PiOkvHNkw" name="Debug__B__Ac__WaitAllDoorBeOpened__Choice1__6">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeOpened__Choice1__6::Region1::Debug__B__Ac__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened__Choice1__6&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKgvQPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__WaitAllDoorBeOpened__Choice1__6__228">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeOpened__Choice1__6::Region1::Debug__B__Ac__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sKe6EPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__WaitAllDoorBeOpened__Choice1__6">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sKe6EfFiEeaP3PiOkvHNkw" name="Debug__A__Ac__WaitAllDoorBeOpened__Choice1__6">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeOpened__Choice1__6::Region1::Debug__A__Ac__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened__Choice1__6&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sKgvQfFiEeaP3PiOkvHNkw" name="Debug__A__Ac__WaitAllDoorBeOpened__Choice1__6__229">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeOpened__Choice1__6::Region1::Debug__A__Ac__WaitAllDoorBeOpened__Choice1__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sPTvsPFiEeaP3PiOkvHNkw" name="Debug__Path__Choice1__WaitAllDoorBeOpened__7" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sPUWwPFiEeaP3PiOkvHNkw" name="Debug__C__Choice1__WaitAllDoorBeOpened__7">
            <connectionPoint xmi:id="_sPUWwvFiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sPUWw_FiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sPUWwfFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sPZ2UfFiEeaP3PiOkvHNkw" name="Debug__init__trans__Choice1__WaitAllDoorBeOpened__7" source="_sPUWwvFiEeaP3PiOkvHNkw" target="_sPYoMPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPdgsPFiEeaP3PiOkvHNkw" name="Debug__init__trans__Choice1__WaitAllDoorBeOpened__7__250">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__WaitAllDoorBeOpened__7::Region1::Debug__init__trans__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sPZ2UvFiEeaP3PiOkvHNkw" name="Debug__Ac__Choice1__WaitAllDoorBeOpened__7" source="_sPYoMPFiEeaP3PiOkvHNkw" target="_sPZPQPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPeHwPFiEeaP3PiOkvHNkw" name="Debug__Ac__Choice1__WaitAllDoorBeOpened__7__252">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__WaitAllDoorBeOpened__7::Region1::Debug__Ac__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;Debug__B__Ac__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;Debug__A__Ac__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sPZ2U_FiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sPZ2VPFiEeaP3PiOkvHNkw" name="Debug__En__WaitAllDoorBeOpened" source="_sPZPQPFiEeaP3PiOkvHNkw" target="_sPZPQvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPadYPFiEeaP3PiOkvHNkw" visibility="public" isReentrant="true">
                  <name xsi:nil="true"/>
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__WaitAllDoorBeOpened__7::Region1::Debug__En__WaitAllDoorBeOpened&quot;,(char *)&quot;Debug__A__Ac__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;Debug__A__En__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;);

    tmpInt++;
</body>
                </effect>
                <trigger xmi:id="_sPZ2VfFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sPadYfFiEeaP3PiOkvHNkw" name="Debug__end__trans__Choice1__WaitAllDoorBeOpened__7" source="_sPZPQvFiEeaP3PiOkvHNkw" target="_sPUWw_FiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPfV4PFiEeaP3PiOkvHNkw" name="Debug__end__trans__Choice1__WaitAllDoorBeOpened__7__255">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__WaitAllDoorBeOpened__7::Region1::Debug__end__trans__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;Debug__A__En__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sPadYvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sPYoMPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__Choice1__WaitAllDoorBeOpened__7">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sPYoMfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__Choice1__WaitAllDoorBeOpened__7">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__WaitAllDoorBeOpened__7::Region1::Debug__B__Ac__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;Choice1__WaitAllDoorBeOpened__7&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sPbEcPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__Choice1__WaitAllDoorBeOpened__7__246">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__WaitAllDoorBeOpened__7::Region1::Debug__B__Ac__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sPZPQPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__Choice1__WaitAllDoorBeOpened__7">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sPZPQfFiEeaP3PiOkvHNkw" name="Debug__A__Ac__Choice1__WaitAllDoorBeOpened__7">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__WaitAllDoorBeOpened__7::Region1::Debug__A__Ac__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;Choice1__WaitAllDoorBeOpened__7&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sPcSkPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__Choice1__WaitAllDoorBeOpened__7__247">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__WaitAllDoorBeOpened__7::Region1::Debug__A__Ac__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sPZPQvFiEeaP3PiOkvHNkw" name="Debug__A__En__Choice1__WaitAllDoorBeOpened__7">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sPZ2UPFiEeaP3PiOkvHNkw" name="Debug__A__En__Choice1__WaitAllDoorBeOpened__7">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__WaitAllDoorBeOpened__7::Region1::Debug__A__En__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;WaitAllDoorBeOpened&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sPc5oPFiEeaP3PiOkvHNkw" name="Debug__A__En__Choice1__WaitAllDoorBeOpened__7__248">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__Choice1__WaitAllDoorBeOpened__7::Region1::Debug__A__En__Choice1__WaitAllDoorBeOpened__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sPgkAPFiEeaP3PiOkvHNkw" name="Debug__Path__AllDoorClosed__WaitAllDoorBeClosed__8" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sPgkAfFiEeaP3PiOkvHNkw" name="Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8">
            <connectionPoint xmi:id="_sPgkA_FiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sPgkBPFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sPgkAvFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sPjnU_FiEeaP3PiOkvHNkw" name="Debug__init__trans__AllDoorClosed__WaitAllDoorBeClosed__8" source="_sPgkA_FiEeaP3PiOkvHNkw" target="_sPjAQPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPmqoPFiEeaP3PiOkvHNkw" name="Debug__init__trans__AllDoorClosed__WaitAllDoorBeClosed__8__270">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8::Region1::Debug__init__trans__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sPkOYPFiEeaP3PiOkvHNkw" name="Debug__Ac__AllDoorClosed__WaitAllDoorBeClosed__8" source="_sPjAQPFiEeaP3PiOkvHNkw" target="_sPjAQvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPnRsPFiEeaP3PiOkvHNkw" name="Debug__Ac__AllDoorClosed__WaitAllDoorBeClosed__8__272">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8::Region1::Debug__Ac__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;Debug__B__Ac__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;Debug__A__Ac__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sPkOYfFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sPkOYvFiEeaP3PiOkvHNkw" name="Debug__En__WaitAllDoorBeClosed" source="_sPjAQvFiEeaP3PiOkvHNkw" target="_sPjnUfFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPkOZPFiEeaP3PiOkvHNkw" visibility="public" isReentrant="true">
                  <name xsi:nil="true"/>
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8::Region1::Debug__En__WaitAllDoorBeClosed&quot;,(char *)&quot;Debug__A__Ac__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;Debug__A__En__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;);

    tmpInt++;
</body>
                </effect>
                <trigger xmi:id="_sPkOY_FiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sPkOZfFiEeaP3PiOkvHNkw" name="Debug__end__trans__AllDoorClosed__WaitAllDoorBeClosed__8" source="_sPjnUfFiEeaP3PiOkvHNkw" target="_sPgkBPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPn4wPFiEeaP3PiOkvHNkw" name="Debug__end__trans__AllDoorClosed__WaitAllDoorBeClosed__8__275">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8::Region1::Debug__end__trans__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;Debug__A__En__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sPkOZvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sPjAQPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__AllDoorClosed__WaitAllDoorBeClosed__8">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sPjAQfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__AllDoorClosed__WaitAllDoorBeClosed__8">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8::Region1::Debug__B__Ac__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;AllDoorClosed__WaitAllDoorBeClosed__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sPk1cPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__AllDoorClosed__WaitAllDoorBeClosed__8__266">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8::Region1::Debug__B__Ac__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sPjAQvFiEeaP3PiOkvHNkw" name="Debug__A__Ac__AllDoorClosed__WaitAllDoorBeClosed__8">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sPjnUPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__AllDoorClosed__WaitAllDoorBeClosed__8">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8::Region1::Debug__A__Ac__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;AllDoorClosed__WaitAllDoorBeClosed__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sPlcgPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__AllDoorClosed__WaitAllDoorBeClosed__8__267">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8::Region1::Debug__A__Ac__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sPjnUfFiEeaP3PiOkvHNkw" name="Debug__A__En__AllDoorClosed__WaitAllDoorBeClosed__8">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sPjnUvFiEeaP3PiOkvHNkw" name="Debug__A__En__AllDoorClosed__WaitAllDoorBeClosed__8">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8::Region1::Debug__A__En__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sPmDkPFiEeaP3PiOkvHNkw" name="Debug__A__En__AllDoorClosed__WaitAllDoorBeClosed__8__268">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__AllDoorClosed__WaitAllDoorBeClosed__8::Region1::Debug__A__En__AllDoorClosed__WaitAllDoorBeClosed__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sPpG4PFiEeaP3PiOkvHNkw" name="Debug__Path__WaitAllDoorBeClosed__AllDoorClosed__9" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sPpG4fFiEeaP3PiOkvHNkw" name="Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9">
            <connectionPoint xmi:id="_sPpt8PFiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sPpt8fFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sPpG4vFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sPsxQvFiEeaP3PiOkvHNkw" name="Debug__init__trans__WaitAllDoorBeClosed__AllDoorClosed__9" source="_sPpt8PFiEeaP3PiOkvHNkw" target="_sPsKMPFiEeaP3PiOkvHNkw"/>
              <transition xmi:id="_sPsxQ_FiEeaP3PiOkvHNkw" name="Debug__Ex__WaitAllDoorBeClosed" source="_sPsKMPFiEeaP3PiOkvHNkw" target="_sPsKMvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPvNgPFiEeaP3PiOkvHNkw" name="Debug__Ex__WaitAllDoorBeClosed__290">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9::Region1::Debug__Ex__WaitAllDoorBeClosed&quot;,(char *)&quot;Debug__B__Ex__WaitAllDoorBeClosed&quot;,(char *)&quot;Debug__B__Ac__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sPsxRPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sPsxRfFiEeaP3PiOkvHNkw" name="Debug__AC__WaitAllDoorBeClosed__AllDoorClosed__9" source="_sPsKMvFiEeaP3PiOkvHNkw" target="_sPsxQPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPv0kPFiEeaP3PiOkvHNkw" name="Debug__AC__WaitAllDoorBeClosed__AllDoorClosed__9__292">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9::Region1::Debug__AC__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;Debug__B__Ac__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;Debug__A__Ac__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sPtYUPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sPtYUfFiEeaP3PiOkvHNkw" name="Debug__end__trans__WaitAllDoorBeClosed__AllDoorClosed__9" source="_sPsxQPFiEeaP3PiOkvHNkw" target="_sPpt8fFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPv0kfFiEeaP3PiOkvHNkw" name="Debug__end__trans__WaitAllDoorBeClosed__AllDoorClosed__9__294">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9::Region1::Debug__end__trans__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;Debug__A__Ac__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sPtYUvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sPsKMPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__WaitAllDoorBeClosed">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sPsKMfFiEeaP3PiOkvHNkw" name="Debug__B__Ex__WaitAllDoorBeClosed">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9::Region1::Debug__B__Ex__WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sPtYU_FiEeaP3PiOkvHNkw" name="Debug__B__Ex__WaitAllDoorBeClosed__286">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9::Region1::Debug__B__Ex__WaitAllDoorBeClosed&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sPsKMvFiEeaP3PiOkvHNkw" name="Debug__B__Ac__WaitAllDoorBeClosed__AllDoorClosed__9">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sPsKM_FiEeaP3PiOkvHNkw" name="Debug__B__Ac__WaitAllDoorBeClosed__AllDoorClosed__9">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9::Region1::Debug__B__Ac__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed__AllDoorClosed__9&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sPt_YPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__WaitAllDoorBeClosed__AllDoorClosed__9__287">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9::Region1::Debug__B__Ac__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sPsxQPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__WaitAllDoorBeClosed__AllDoorClosed__9">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sPsxQfFiEeaP3PiOkvHNkw" name="Debug__A__Ac__WaitAllDoorBeClosed__AllDoorClosed__9">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9::Region1::Debug__A__Ac__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;WaitAllDoorBeClosed__AllDoorClosed__9&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sPumcPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__WaitAllDoorBeClosed__AllDoorClosed__9__288">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__WaitAllDoorBeClosed__AllDoorClosed__9::Region1::Debug__A__Ac__WaitAllDoorBeClosed__AllDoorClosed__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sPxpwPFiEeaP3PiOkvHNkw" name="Debug__Path__StartingUp__doorsOpen__10" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sPxpwfFiEeaP3PiOkvHNkw" name="Debug__C__StartingUp__doorsOpen__10">
            <connectionPoint xmi:id="_sPxpw_FiEeaP3PiOkvHNkw" name="en" kind="entryPoint"/>
            <connectionPoint xmi:id="_sPxpxPFiEeaP3PiOkvHNkw" name="ex" kind="exitPoint"/>
            <region xmi:id="_sPxpwvFiEeaP3PiOkvHNkw" name="Region1">
              <transition xmi:id="_sP1UI_FiEeaP3PiOkvHNkw" name="Debug__init__trans__StartingUp__doorsOpen__10" source="_sPxpw_FiEeaP3PiOkvHNkw" target="_sP0GAvFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sP4XcPFiEeaP3PiOkvHNkw" name="Debug__init__trans__StartingUp__doorsOpen__10__310">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__init__trans__StartingUp__doorsOpen__10&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__StartingUp&quot;,(char *)&quot;&quot;);

</body>
                </effect>
              </transition>
              <transition xmi:id="_sP1UJPFiEeaP3PiOkvHNkw" name="Debug__Ex__StartingUp" source="_sP0GAvFiEeaP3PiOkvHNkw" target="_sP0tEfFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sP4-gPFiEeaP3PiOkvHNkw" name="Debug__Ex__StartingUp__312">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__Ex__StartingUp&quot;,(char *)&quot;Debug__B__Ex__StartingUp&quot;,(char *)&quot;Debug__B__Ac__StartingUp__doorsOpen__10&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sP17MPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sP17MfFiEeaP3PiOkvHNkw" name="Debug__AC__StartingUp__doorsOpen__10" source="_sP0tEfFiEeaP3PiOkvHNkw" target="_sP0tE_FiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sP5lkPFiEeaP3PiOkvHNkw" name="Debug__AC__StartingUp__doorsOpen__10__314">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__AC__StartingUp__doorsOpen__10&quot;,(char *)&quot;Debug__B__Ac__StartingUp__doorsOpen__10&quot;,(char *)&quot;Debug__A__Ac__StartingUp__doorsOpen__10&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sP17MvFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sP17M_FiEeaP3PiOkvHNkw" name="Debug__En__doorsOpen" source="_sP0tE_FiEeaP3PiOkvHNkw" target="_sP1UIfFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sP17NfFiEeaP3PiOkvHNkw" name="getLockCommand" visibility="public" isReentrant="true">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__En__doorsOpen&quot;,(char *)&quot;Debug__A__Ac__StartingUp__doorsOpen__10&quot;,(char *)&quot;Debug__A__En__doorsOpen&quot;,(char *)&quot;&quot;);

    std::cout&lt;&lt;&quot;Doors are open&quot;&lt;&lt;std::endl;
    std::cout&lt;&lt;&quot;Press any key to close doors&quot;&lt;&lt;std::endl;
    getchar();
    std::cout&lt;&lt;&quot;Sending Lock message to doors\n&quot;&lt;&lt;std::endl;
    /// send message to first door
    lockPort.lock().send(4);
    tmpInt=1;
</body>
                </effect>
                <trigger xmi:id="_sP17NPFiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <transition xmi:id="_sP17NvFiEeaP3PiOkvHNkw" name="Debug__end__trans__StartingUp__doorsOpen__10" source="_sP1UIfFiEeaP3PiOkvHNkw" target="_sPxpxPFiEeaP3PiOkvHNkw">
                <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sP6zsPFiEeaP3PiOkvHNkw" name="Debug__end__trans__StartingUp__doorsOpen__10__317">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__end__trans__StartingUp__doorsOpen__10&quot;,(char *)&quot;Debug__A__En__doorsOpen&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);

</body>
                </effect>
                <trigger xmi:id="_sP17N_FiEeaP3PiOkvHNkw" name="Debug__Exec" port="_rwdQgPFiEeaP3PiOkvHNkw">
                  <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                </trigger>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_sP0GAvFiEeaP3PiOkvHNkw" name="Debug__B__Ex__StartingUp">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sP0tEPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__StartingUp">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__B__Ex__StartingUp&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;StartingUp&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sP17OPFiEeaP3PiOkvHNkw" name="Debug__B__Ex__StartingUp__305">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__B__Ex__StartingUp&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sP0tEfFiEeaP3PiOkvHNkw" name="Debug__B__Ac__StartingUp__doorsOpen__10">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sP0tEvFiEeaP3PiOkvHNkw" name="Debug__B__Ac__StartingUp__doorsOpen__10">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__B__Ac__StartingUp__doorsOpen__10&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;StartingUp&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;StartingUp__doorsOpen__10&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sP2iQPFiEeaP3PiOkvHNkw" name="Debug__B__Ac__StartingUp__doorsOpen__10__306">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__B__Ac__StartingUp__doorsOpen__10&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sP0tE_FiEeaP3PiOkvHNkw" name="Debug__A__Ac__StartingUp__doorsOpen__10">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sP1UIPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__StartingUp__doorsOpen__10">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__A__Ac__StartingUp__doorsOpen__10&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;StartingUp__doorsOpen__10&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;doorsOpen&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sP3JUPFiEeaP3PiOkvHNkw" name="Debug__A__Ac__StartingUp__doorsOpen__10__307">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__A__Ac__StartingUp__doorsOpen__10&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_sP1UIfFiEeaP3PiOkvHNkw" name="Debug__A__En__doorsOpen">
                <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sP1UIvFiEeaP3PiOkvHNkw" name="Debug__A__En__doorsOpen">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__A__En__doorsOpen&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

if (not(Debug__SRO.checkDebug(&quot;doorsOpen&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}
</body>
                </entry>
                <exit xmi:type="uml:OpaqueBehavior" xmi:id="_sP3wYPFiEeaP3PiOkvHNkw" name="Debug__A__En__doorsOpen__308">
                  <language>C++</language>
                  <body>Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITSTART,this->getName(),this->getIndex(),msg->getSignalName(),(char *)&quot;&quot;,(char *)&quot;CarDoorLock::CentralLock::centralLockSM::Region1::Debug__C__StartingUp__doorsOpen__10::Region1::Debug__A__En__doorsOpen&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);

</body>
                </exit>
              </subvertex>
            </region>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_sP8B0PFiEeaP3PiOkvHNkw" name="Debug__InitState"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_r4-TUfFiEeaP3PiOkvHNkw" name="Debug__variablesViewMethod" specification="_r4-TUPFiEeaP3PiOkvHNkw">
        <language>C++</language>
        <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;tmpInt,&quot;);
tempS.append(&quot;Integer,&quot;);
if(tmpInt!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,tmpInt);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
tempS.append(&quot;locksCount,&quot;);
tempS.append(&quot;Integer,&quot;);
if(locksCount!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,locksCount);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_r5BWoPFiEeaP3PiOkvHNkw" name="Debug__variablesChange" specification="_r4-6YPFiEeaP3PiOkvHNkw">
        <language>C++</language>
        <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;tmpInt&quot;==tempVarName){
    tmpInt=atoi(varValue);
    return true;
}else if (&quot;locksCount&quot;==tempVarName){
    locksCount=atoi(varValue);
    return true;
}else 
    return false;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_r6XacfFiEeaP3PiOkvHNkw" name="Debug__sendEvent" specification="_r5w9gPFiEeaP3PiOkvHNkw">
        <language>C++</language>
        <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_r4-TUPFiEeaP3PiOkvHNkw" name="Debug__variablesView" visibility="private" method="_r4-TUfFiEeaP3PiOkvHNkw"/>
      <ownedOperation xmi:id="_r4-6YPFiEeaP3PiOkvHNkw" name="Debug__variablesChange" visibility="private" method="_r5BWoPFiEeaP3PiOkvHNkw">
        <ownedParameter xmi:id="_r4_hcPFiEeaP3PiOkvHNkw" name="methodReturn" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r5AvkPFiEeaP3PiOkvHNkw" name="varName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r5AvkfFiEeaP3PiOkvHNkw" name="varValue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_r5w9gPFiEeaP3PiOkvHNkw" name="Debug__sendEvent" visibility="private" method="_r6XacfFiEeaP3PiOkvHNkw">
        <ownedParameter xmi:id="_r5w9gfFiEeaP3PiOkvHNkw" name="eventSourceKind">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r55gYPFiEeaP3PiOkvHNkw" name="eventType">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r6CDQPFiEeaP3PiOkvHNkw" name="instanceName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r6L0QPFiEeaP3PiOkvHNkw" name="capsuleIndex">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r6MbUPFiEeaP3PiOkvHNkw" name="signalName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r6WzYPFiEeaP3PiOkvHNkw" name="capsuleName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r6WzYfFiEeaP3PiOkvHNkw" name="sourceName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r6WzYvFiEeaP3PiOkvHNkw" name="reserve1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r6WzY_FiEeaP3PiOkvHNkw" name="reserve2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_r6XacPFiEeaP3PiOkvHNkw" name="reserve3">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LXPSQNrAEeahI77Vg4Dl9Q" name="Locking">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_LXKZwNrAEeahI77Vg4Dl9Q" name="Locking">
        <interfaceRealization xmi:id="_LXV_8NrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXSVkNrAEeahI77Vg4Dl9Q" contract="_LXSVkNrAEeahI77Vg4Dl9Q"/>
        <interfaceRealization xmi:id="_LXfJ4NrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXcGkNrAEeahI77Vg4Dl9Q" contract="_LXcGkNrAEeahI77Vg4Dl9Q"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LXSVkNrAEeahI77Vg4Dl9Q" name="Locking">
        <ownedOperation xmi:id="_WHBOsNrAEeahI77Vg4Dl9Q" name="lock"/>
        <ownedOperation xmi:id="_Y7LYYNrAEeahI77Vg4Dl9Q" name="unlock"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LXX1INrAEeahI77Vg4Dl9Q" name="Locking~">
        <ownedOperation xmi:id="_MKPDMNrFEeahI77Vg4Dl9Q" name="lockStatus">
          <ownedParameter xmi:id="_P-KAwNrFEeahI77Vg4Dl9Q" name="locked">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_LXaRYNrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXX1INrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_LXa4cNrAEeahI77Vg4Dl9Q" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LXcGkNrAEeahI77Vg4Dl9Q" name="LockingIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_LXgYANrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXcGkNrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_XN1s0NrAEeahI77Vg4Dl9Q" operation="_WHBOsNrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_Zlrt8NrAEeahI77Vg4Dl9Q" operation="_Y7LYYNrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_NUfP0NrFEeahI77Vg4Dl9Q" operation="_MKPDMNrFEeahI77Vg4Dl9Q"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ruoEgPFiEeaP3PiOkvHNkw" name="Debug__Top">
      <ownedAttribute xmi:id="_rwGrMPFiEeaP3PiOkvHNkw" name="Debug__Gateway">
        <type xmi:type="uml:Class" href="../CommGateWay/model.uml#_XIyCcAdxEeadtKuU2t6fMg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rwP1IPFiEeaP3PiOkvHNkw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_rwP1IfFiEeaP3PiOkvHNkw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_rwRqUPFiEeaP3PiOkvHNkw" name="Debug__Car" type="_iSbRENq_EeahI77Vg4Dl9Q">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rwZmIfFiEeaP3PiOkvHNkw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_rwaNMPFiEeaP3PiOkvHNkw" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <profileApplication xmi:id="_0wPiINq9EeahI77Vg4Dl9Q">
      <eAnnotations xmi:id="_0wR-YNq9EeahI77Vg4Dl9Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_LVEcINrNEeahI77Vg4Dl9Q">
      <eAnnotations xmi:id="_LVFqQNrNEeahI77Vg4Dl9Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLRT_CPP/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_iUqswNq_EeahI77Vg4Dl9Q" base_Class="_iSbRENq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:Capsule xmi:id="_ltJEcNq_EeahI77Vg4Dl9Q" base_Class="_ls0UUNq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:Capsule xmi:id="_s7p5kNq_EeahI77Vg4Dl9Q" base_Class="_s7aB8Nq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:Capsule xmi:id="_xTPk4Nq_EeahI77Vg4Dl9Q" base_Class="_xS9RANq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:ProtocolContainer xmi:id="_LXQgYNrAEeahI77Vg4Dl9Q" base_Package="_LXPSQNrAEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTMessageSet xmi:id="_LXUKwNrAEeahI77Vg4Dl9Q" base_Interface="_LXSVkNrAEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTMessageSet xmi:id="_LXZDQNrAEeahI77Vg4Dl9Q" base_Interface="_LXX1INrAEeahI77Vg4Dl9Q" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_LXdUsNrAEeahI77Vg4Dl9Q" base_Interface="_LXcGkNrAEeahI77Vg4Dl9Q" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_LXg_ENrAEeahI77Vg4Dl9Q" base_Collaboration="_LXKZwNrAEeahI77Vg4Dl9Q"/>
  <UMLRealTime:CapsulePart xmi:id="_GVgBQNrBEeahI77Vg4Dl9Q" base_Property="_GVbv0NrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:CapsulePart xmi:id="_LNWhANrBEeahI77Vg4Dl9Q" base_Property="_LNSPkNrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTPort xmi:id="_WvNaoNrBEeahI77Vg4Dl9Q" base_Port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTPort xmi:id="_k3m4sNrBEeahI77Vg4Dl9Q" base_Port="_k3gyENrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:CapsulePart xmi:id="_yAPi4NrBEeahI77Vg4Dl9Q" base_Property="_yAJcQNrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTPort xmi:id="_-jPJYNrBEeahI77Vg4Dl9Q" base_Port="_-jLfANrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTConnector xmi:id="_U4ZNgdrCEeahI77Vg4Dl9Q" base_Connector="_U4X_YNrCEeahI77Vg4Dl9Q"/>
  <RTCppProperties:CapsuleProperties xmi:id="_QG5zcNrNEeahI77Vg4Dl9Q" headerPreface="#include&lt;stdio.h>&#xA;#include&lt;iostream>&#xA;&#xA;&#xA;#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;" base_Class="_s7aB8Nq_EeahI77Vg4Dl9Q"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qaE6YNrPEeay9vzLxQrrvQ" headerPreface="#include&lt;stdio.h>&#xA;#include&lt;iostream>&#xA;#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;" base_Class="_xS9RANq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTPort xmi:id="_Ce3MQNrUEeaBAosuR3tfxw" isWired="false" base_Port="_Cey60NrUEeaBAosuR3tfxw"/>
  <UMLRealTime:RTConnector xmi:id="_-oDOkNraEeal5dJZNvUqew" base_Connector="_-n9H8NraEeal5dJZNvUqew"/>
  <UMLRealTime:CapsulePart xmi:id="_V8w48NrgEeal5dJZNvUqew" base_Property="_V8mg4NrgEeal5dJZNvUqew"/>
  <UMLRealTime:RTConnector xmi:id="_bwRvstrgEeal5dJZNvUqew" base_Connector="_bwP6gNrgEeal5dJZNvUqew"/>
  <UMLRealTime:CapsulePart xmi:id="_5AN0oNrgEeal5dJZNvUqew" base_Property="_5AKKQNrgEeal5dJZNvUqew"/>
  <UMLRealTime:RTConnector xmi:id="_-3zTEdrgEeal5dJZNvUqew" base_Connector="_-3w20NrgEeal5dJZNvUqew"/>
  <UMLRealTime:CapsulePart xmi:id="_AVeyANrhEeal5dJZNvUqew" base_Property="_AVcVwNrhEeal5dJZNvUqew"/>
  <UMLRealTime:RTConnector xmi:id="_EUj2sNrhEeal5dJZNvUqew" base_Connector="_EUhacNrhEeal5dJZNvUqew"/>
  <UMLRealTime:Capsule xmi:id="_rwCZwPFiEeaP3PiOkvHNkw" base_Class="_ruoEgPFiEeaP3PiOkvHNkw"/>
  <UMLRealTime:CapsulePart xmi:id="_rwPOEPFiEeaP3PiOkvHNkw" base_Property="_rwGrMPFiEeaP3PiOkvHNkw"/>
  <UMLRealTime:CapsulePart xmi:id="_rwZmIPFiEeaP3PiOkvHNkw" base_Property="_rwRqUPFiEeaP3PiOkvHNkw"/>
  <UMLRealTime:RTPort xmi:id="_r4ytIPFiEeaP3PiOkvHNkw" isNotification="true" isWired="false" base_Port="_rwdQgPFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:AttributeProperties xmi:id="_r5G2MPFiEeaP3PiOkvHNkw" type="debugEvents::Event" base_Property="_r5B9sfFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:AttributeProperties xmi:id="_r5VfsPFiEeaP3PiOkvHNkw" type="SROManager" base_Property="_r5QAIPFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:ParameterProperties xmi:id="_r50n4PFiEeaP3PiOkvHNkw" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_r5w9gfFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:ParameterProperties xmi:id="_r5-Y4PFiEeaP3PiOkvHNkw" type="debugEvents::EVENTTYPE" base_Parameter="_r55gYPFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:ParameterProperties xmi:id="_r6IJ4PFiEeaP3PiOkvHNkw" type="const char *" base_Parameter="_r6CDQPFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:ParameterProperties xmi:id="_r6R64PFiEeaP3PiOkvHNkw" type="const char *" base_Parameter="_r6MbUPFiEeaP3PiOkvHNkw"/>
  <UMLRealTime:RTPort xmi:id="_r6dhEPFiEeaP3PiOkvHNkw" isNotification="true" isWired="false" base_Port="_r6YokPFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:AttributeProperties xmi:id="_r6tYsPFiEeaP3PiOkvHNkw" type="debugEvents::Event" base_Property="_r6nSFfFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:AttributeProperties xmi:id="_r63wwPFiEeaP3PiOkvHNkw" type="SROManager" base_Property="_r6yRMPFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:ParameterProperties xmi:id="_r7VDwPFiEeaP3PiOkvHNkw" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_r7QyUfFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:ParameterProperties xmi:id="_r7c_kPFiEeaP3PiOkvHNkw" type="debugEvents::EVENTTYPE" base_Parameter="_r7YuIPFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:ParameterProperties xmi:id="_r7jtQPFiEeaP3PiOkvHNkw" type="const char *" base_Parameter="_r7gp8PFiEeaP3PiOkvHNkw"/>
  <RTCppProperties:ParameterProperties xmi:id="_r7rCAPFiEeaP3PiOkvHNkw" type="const char *" base_Parameter="_r7nXofFiEeaP3PiOkvHNkw"/>
</xmi:XMI>
